var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.362,1,2.126]],["body/controllers/AppController.html",[0,2.098,1,3.275,2,1.634,3,0.287,4,0.287,5,0.244,6,3.272,7,0.523,8,1.229,9,5.006,10,3.899,11,4.279,12,1.771,13,0.029,14,5.006,15,0.752,16,3.899,17,1.034,18,0.752,19,0.577,20,0.817,21,4.641,22,0.957,23,2.305,24,0.368,25,2.859,26,0.472,27,2.859,28,0.287,29,0.164,30,3.899,31,3.899,32,0.017,33,0.022,34,0.017]],["title/modules/AppModule.html",[35,1.003,36,2.126]],["body/modules/AppModule.html",[1,2.997,2,1.638,3,0.199,4,0.199,5,0.17,8,0.665,13,0.029,15,0.523,17,0.719,18,0.523,19,0.401,20,0.568,22,0.665,23,1.602,24,0.444,26,0.328,28,0.199,29,0.114,32,0.012,33,0.017,34,0.012,35,1.414,36,3.951,37,1.136,38,1.136,39,1.338,40,1.338,41,1.136,42,1.338,43,1.338,44,2.275,45,2.275,46,3.272,47,3.272,48,3.272,49,1.928,50,1.338,51,1.338,52,2.711,53,2.309,54,2.711,55,3.907,56,5.013,57,2.711,58,2.711,59,3.907,60,2.711,61,2.711,62,2.711,63,1.774,64,2.711,65,1.602,66,2.711,67,2.275,68,1.602,69,1.774,70,2.275,71,2.711,72,2.711,73,1.988,74,2.711,75,2.711,76,2.708,77,2.711,78,1.051,79,2.711,80,2.711,81,2.711,82,1.774,83,2.711]],["title/modules/AuthModule.html",[35,1.003,84,1.921]],["body/modules/AuthModule.html",[3,0.204,4,0.204,5,0.174,13,0.029,24,0.432,26,0.336,28,0.204,29,0.117,32,0.012,33,0.017,34,0.012,35,1.432,37,1.163,38,1.163,39,1.369,40,1.369,41,1.163,42,2.29,43,2.29,49,1.96,50,1.369,51,1.369,53,2.348,78,1.075,84,3.753,85,2.328,86,2.328,87,2.328,88,2.328,89,2.753,90,3.063,91,3.297,92,3.536,93,2.774,94,2.328,95,2.034,96,2.034,97,2.774,98,1.494,99,2.034,100,2.774,101,2.774,102,2.034,103,1.815,104,2.328,105,2.774,106,2.774,107,2.774,108,1.815,109,2.774,110,2.774,111,2.328,112,2.328,113,2.774,114,2.774,115,2.774]],["title/injectables/AuthUserService.html",[90,1.604,116,0.353]],["body/injectables/AuthUserService.html",[3,0.19,4,0.19,5,0.162,7,0.347,8,0.927,13,0.029,15,0.86,17,1.182,18,0.86,19,0.659,20,0.934,22,0.927,24,0.36,26,0.313,28,0.19,29,0.109,32,0.02,33,0.017,34,0.011,76,1.528,90,1.863,102,1.896,116,0.41,117,0.798,118,4.114,119,2.169,120,2.933,121,2.768,122,3.774,123,1.276,124,2.585,125,2.473,126,5.622,127,2.585,128,3.168,129,2.538,130,2.585,131,3.774,132,1.337,133,3.082,134,2.585,135,1.714,136,2.033,137,1.896,138,1.896,139,1.392,140,1.691,141,2.025,142,2.231,143,2.169,144,3.774,145,1.376,146,2.585,147,2.585,148,1.691,149,1.392,150,2.585,151,2.169,152,2.585,153,2.585,154,2.585]],["title/classes/HttpExceptionFilter.html",[29,0.137,155,2.383]],["body/classes/HttpExceptionFilter.html",[3,0.199,4,0.199,5,0.169,7,0.363,8,0.957,11,3.892,13,0.03,15,0.752,17,1.033,18,0.752,19,0.676,20,0.816,22,0.957,23,1.597,24,0.336,26,0.472,28,0.199,29,0.114,32,0.012,33,0.017,34,0.012,69,1.768,70,2.268,82,2.55,132,0.663,141,2.588,145,0.834,155,2.858,156,1.597,157,3.837,158,2.268,159,4.572,160,3.671,161,3.898,162,3.898,163,5.307,164,3.837,165,5.005,166,2.702,167,2.702,168,3.898,169,2.702,170,4.572,171,2.702,172,2.702,173,2.702,174,2.702,175,2.702,176,3.671,177,5.005,178,2.702,179,2.702,180,2.702,181,2.702,182,2.702,183,2.268,184,2.858,185,2.702,186,1.227,187,2.702,188,2.702,189,2.702,190,2.702]],["title/interfaces/IModule2.html",[191,1.921,192,2.126]],["body/interfaces/IModule2.html",[3,0.292,4,0.292,5,0.249,7,0.533,13,0.029,19,0.588,20,1.061,24,0.292,28,0.372,32,0.017,33,0.022,34,0.017,76,2.349,78,1.54,132,1.442,141,1.804,186,1.804,191,2.349,192,3.315,193,2.914,194,2.914,195,2.995,196,2.996,197,2.995,198,2.599,199,2.914,200,2.914,201,2.914,202,2.14,203,3.334,204,2.914]],["title/interfaces/IUser.html",[191,1.921,205,2.126]],["body/interfaces/IUser.html",[3,0.253,4,0.253,5,0.216,7,0.463,13,0.029,18,1.119,19,0.823,20,1.165,24,0.253,28,0.34,32,0.015,33,0.02,34,0.015,76,3.289,78,1.337,132,1.581,133,3.429,135,2.634,141,1.566,186,1.566,191,2.039,193,2.529,195,2.73,197,2.73,199,2.529,200,2.529,201,2.529,202,1.857,203,2.894,205,3.022,206,2.529,207,2.256,208,2.894,209,2.894,210,2.894]],["title/injectables/JwtAuthGuard.html",[116,0.353,211,2.126]],["body/injectables/JwtAuthGuard.html",[3,0.331,4,0.331,5,0.282,13,0.029,24,0.403,26,0.546,28,0.331,29,0.189,32,0.02,33,0.024,34,0.02,98,2.428,116,0.595,117,1.391,202,2.428,211,3.587,212,3.784,213,3.306,214,3.784,215,4.508]],["title/injectables/JwtStrategy.html",[91,1.921,116,0.353]],["body/injectables/JwtStrategy.html",[3,0.253,4,0.253,5,0.216,7,0.463,8,1.134,13,0.029,15,0.891,17,0.914,18,0.665,19,0.51,20,0.722,22,0.847,24,0.409,26,0.418,28,0.253,29,0.145,32,0.015,33,0.02,34,0.015,78,1.337,91,2.73,98,1.857,103,2.256,104,2.894,108,2.256,112,2.894,116,0.501,117,1.064,120,2.805,123,2.571,135,1.566,145,1.064,149,1.857,151,2.894,202,1.857,216,2.894,217,3.876,218,3.448,219,4.619,220,3.448,221,3.448,222,2.894,223,2.256,224,2.894,225,2.894,226,2.894,227,3.448,228,3.448,229,3.448,230,3.448,231,3.448,232,3.448]],["title/injectables/LocalAuthGuard.html",[116,0.353,233,2.126]],["body/injectables/LocalAuthGuard.html",[3,0.331,4,0.331,5,0.282,13,0.029,24,0.403,26,0.546,28,0.331,29,0.189,32,0.02,33,0.024,34,0.02,98,2.428,116,0.595,117,1.391,202,2.428,213,3.306,214,3.784,233,3.587,234,3.306,235,4.508]],["title/injectables/LocalUserStrategy.html",[92,1.921,116,0.353]],["body/injectables/LocalUserStrategy.html",[3,0.226,4,0.226,5,0.193,7,0.413,8,1.05,13,0.029,15,0.825,17,1.134,18,0.825,19,0.632,20,0.896,22,0.756,24,0.39,26,0.373,28,0.226,29,0.129,32,0.014,33,0.019,34,0.014,90,2.848,92,2.528,94,2.585,95,2.259,98,1.659,99,2.259,116,0.464,117,0.951,120,2.646,123,1.52,129,2.059,132,1.417,133,3.296,135,1.942,136,2.303,139,1.659,141,1.399,142,1.821,145,0.951,186,1.399,202,1.659,217,3.589,222,2.585,223,2.015,224,2.585,225,2.585,226,2.585,234,3.603,236,2.585,237,3.08,238,3.08,239,4.276,240,3.08,241,4.276,242,3.08,243,3.08,244,3.08,245,2.259]],["title/controllers/Module1Controller.html",[0,1.362,65,1.921]],["body/controllers/Module1Controller.html",[0,1.151,2,1.151,3,0.202,4,0.202,5,0.172,7,0.369,8,0.968,12,1.791,13,0.029,15,0.761,17,1.046,18,0.761,19,0.583,20,0.826,22,0.968,24,0.393,25,2.014,26,0.333,28,0.202,29,0.115,32,0.02,33,0.017,34,0.012,65,2.331,132,1.133,139,1.479,145,1.217,148,2.58,149,2.124,176,2.892,196,2.744,246,2.305,247,2.014,248,2.746,249,4.077,250,2.305,251,2.892,252,5.043,253,3.943,254,3.31,255,2.305,256,2.746,257,1.653,258,2.305,259,2.981,260,2.892,261,2.305,262,2.746,263,2.014,264,1.797,265,2.746,266,3.384,267,3.872,268,2.014,269,1.355,270,2.485,271,2.305,272,2.305,273,1.797,274,2.746,275,2.746,276,2.746,277,2.746,278,2.892,279,2.305,280,2.014,281,2.305,282,2.746,283,2.305,284,2.305,285,2.746]],["title/injectables/Module1Interceptor.html",[116,0.353,273,2.126]],["body/injectables/Module1Interceptor.html",[3,0.275,4,0.275,5,0.234,7,0.502,8,1.197,13,0.029,15,0.722,17,0.992,18,0.722,19,0.553,20,0.784,22,0.919,24,0.358,26,0.453,28,0.275,29,0.157,32,0.016,33,0.021,34,0.016,82,2.448,116,0.529,117,1.155,145,1.155,273,3.19,286,3.14,287,4.875,288,4.875,289,5.744,290,4.55,291,5.744,292,3.742,293,3.742,294,5.422,295,4.875,296,3.14,297,3.742,298,2.744,299,3.14,300,3.742]],["title/injectables/Module1Middleware.html",[63,2.126,116,0.353]],["body/injectables/Module1Middleware.html",[3,0.271,4,0.271,5,0.231,7,0.496,8,1.186,11,3.951,13,0.028,15,0.932,17,0.979,18,0.712,19,0.546,20,0.773,21,4.521,22,0.906,23,2.183,24,0.271,26,0.447,28,0.271,29,0.155,32,0.016,33,0.021,34,0.016,63,3.162,82,2.416,116,0.524,117,1.139,123,2.659,290,4.796,298,2.708,299,3.099,301,3.099,302,4.832,303,3.692,304,4.832,305,5.387,306,4.521,307,3.692,308,3.692,309,4.832,310,3.692]],["title/classes/Module1Model.html",[29,0.137,259,1.921]],["body/classes/Module1Model.html",[3,0.292,4,0.292,5,0.249,7,0.533,12,2.301,13,0.029,15,0.977,19,0.749,24,0.292,28,0.292,29,0.167,32,0.017,33,0.022,34,0.017,78,1.964,132,1.442,156,2.349,195,2.995,196,2.753,257,2.339,259,2.995,269,1.961,311,3.334,312,2.914,313,3.973,314,4.309,315,3.973,316,2.914]],["title/modules/Module1Module.html",[35,1.003,46,1.921]],["body/modules/Module1Module.html",[2,2.08,3,0.283,4,0.283,5,0.241,13,0.029,24,0.404,26,0.466,28,0.283,29,0.162,32,0.017,33,0.022,34,0.017,35,1.695,37,1.612,38,1.612,39,1.898,40,1.898,41,1.612,42,2.711,43,1.898,46,3.637,49,2.449,50,1.898,51,1.898,65,3.247,270,3.314,271,3.227,317,3.227,318,3.227,319,3.845,320,3.845]],["title/injectables/Module1Service.html",[116,0.353,270,1.75]],["body/injectables/Module1Service.html",[3,0.257,4,0.257,5,0.219,7,0.469,8,1.143,13,0.03,15,0.898,17,1.235,18,0.898,19,0.689,20,0.976,22,1.143,24,0.342,26,0.423,28,0.257,29,0.147,32,0.015,33,0.02,34,0.015,116,0.505,117,1.078,132,1.372,145,1.437,149,2.823,257,2.197,259,3.305,260,3.416,270,2.508,272,2.93,321,2.93,322,2.508,323,3.047,324,3.492,325,3.909,326,3.492]],["title/controllers/Module2Controller.html",[0,1.362,327,2.126]],["body/controllers/Module2Controller.html",[0,1.163,2,1.163,3,0.204,4,0.204,5,0.174,7,0.372,8,0.975,12,1.804,13,0.029,15,0.766,17,1.053,18,0.766,19,0.587,20,0.832,22,0.975,24,0.372,25,2.034,26,0.336,28,0.204,29,0.117,32,0.02,33,0.017,34,0.012,132,1.139,136,2.728,139,1.494,145,1.226,148,2.599,149,2.139,176,2.913,196,2.5,247,2.034,249,3.715,250,2.328,251,2.913,254,3.333,255,2.328,257,1.945,258,2.328,261,2.328,263,2.034,264,1.815,266,3.403,267,3.894,268,2.034,269,1.369,278,2.913,279,2.328,280,2.034,281,2.328,283,2.328,284,2.328,322,2.139,327,2.599,328,2.328,329,2.774,330,3.403,331,2.774,332,2.774,333,2.728,334,3.972,335,2.774,336,3.972,337,2.774,338,2.499,339,2.328,340,2.034,341,2.774,342,2.774,343,2.774,344,2.774]],["title/classes/Module2Model.html",[29,0.137,333,1.75]],["body/classes/Module2Model.html",[3,0.292,4,0.292,5,0.249,7,0.533,12,2.301,13,0.029,15,0.977,19,0.749,24,0.292,28,0.292,29,0.167,32,0.017,33,0.022,34,0.017,78,1.964,132,1.442,156,2.349,195,2.995,196,2.753,257,2.339,269,1.961,312,2.914,314,4.309,316,2.914,333,2.729,345,3.334,346,3.973,347,3.973]],["title/modules/Module2Module.html",[35,1.003,47,1.921]],["body/modules/Module2Module.html",[2,1.986,3,0.263,4,0.263,5,0.224,13,0.029,24,0.415,26,0.434,28,0.263,29,0.15,32,0.016,33,0.021,34,0.016,35,1.638,37,1.501,38,1.501,39,1.768,40,1.768,41,1.501,42,2.619,43,1.768,47,3.694,49,2.338,50,1.768,51,1.768,53,2.8,89,2.978,96,2.627,327,3.473,338,3.25,339,3.006,348,3.006,349,3.581,350,3.006,351,3.581,352,3.581]],["title/injectables/Module2MongoService.html",[116,0.353,353,1.604]],["body/injectables/Module2MongoService.html",[3,0.195,4,0.195,5,0.167,7,0.357,8,0.946,13,0.029,15,0.874,17,1.201,18,0.874,19,0.67,20,0.949,22,0.946,24,0.388,26,0.322,28,0.195,29,0.112,32,0.012,33,0.017,34,0.012,68,1.572,116,0.418,117,0.821,120,2.961,123,1.312,132,1.112,136,2.676,140,1.74,141,1.208,142,2.278,145,1.189,160,2.825,184,2.825,186,2.256,192,1.74,197,1.572,204,1.95,245,3.323,257,1.615,322,2.075,323,2.521,333,2.676,340,1.95,353,1.902,354,2.232,355,2.825,356,2.659,357,4.169,358,2.659,359,4.531,360,3.853,361,2.659,362,2.659,363,2.232,364,3.233,365,2.232,366,2.232,367,2.659,368,3.233,369,4.968,370,2.659,371,2.659,372,2.659,373,2.659,374,3.233,375,2.659,376,2.659,377,2.232]],["title/injectables/Module2Service.html",[116,0.353,338,1.75]],["body/injectables/Module2Service.html",[3,0.242,4,0.242,5,0.207,7,0.443,8,1.1,13,0.029,15,0.982,17,1.35,18,0.982,19,0.753,20,1.067,22,1.1,24,0.374,26,0.399,28,0.242,29,0.139,32,0.015,33,0.02,34,0.015,116,0.486,117,1.018,123,1.628,132,1.25,136,2.942,137,2.419,139,1.777,145,1.383,149,1.777,257,1.383,260,3.288,322,2.414,323,2.933,325,3.762,333,2.942,338,2.414,340,2.419,353,2.908,378,2.769,379,3.299,380,3.299,381,3.299,382,3.299,383,3.299,384,3.299]],["title/injectables/SchedulerService.html",[116,0.353,385,1.921]],["body/injectables/SchedulerService.html",[3,0.26,4,0.26,5,0.222,7,0.475,8,1.153,12,2.133,13,0.029,15,0.906,22,1.153,23,2.777,24,0.345,26,0.428,28,0.26,29,0.149,32,0.016,33,0.021,34,0.016,73,2.593,116,0.51,117,1.091,385,2.777,386,2.968,387,5.619,388,5.619,389,4.697,390,3.536,391,5.619,392,4.697,393,5.274,394,4.697,395,3.536,396,3.536,397,3.536,398,3.536,399,3.536,400,3.536,401,3.536,402,3.536]],["title/modules/ServicesModule.html",[35,1.003,89,1.604]],["body/modules/ServicesModule.html",[3,0.217,4,0.217,5,0.185,13,0.029,18,0.8,24,0.43,26,0.357,28,0.217,29,0.124,32,0.013,33,0.018,34,0.013,35,1.481,37,1.236,38,1.236,39,1.456,40,1.456,41,1.236,42,2.369,43,2.369,49,2.048,50,1.456,51,1.456,53,1.744,67,2.476,68,1.744,89,3.069,125,2.824,129,1.236,141,1.34,198,2.715,207,2.715,353,2.809,365,2.476,385,3.365,403,2.476,404,2.476,405,2.476,406,2.163,407,4.149,408,2.95,409,2.95,410,2.476,411,2.95,412,3.52,413,2.95,414,2.95,415,4.149]],["title/classes/User.html",[29,0.137,129,1.362]],["body/classes/User.html",[3,0.253,4,0.253,5,0.216,7,0.463,12,2.365,13,0.029,15,1.073,18,1.005,19,0.823,20,1.25,24,0.253,28,0.253,29,0.145,32,0.015,33,0.02,34,0.015,78,2.157,129,1.936,132,1.521,133,3.079,135,2.365,156,2.039,195,2.73,269,1.702,312,3.387,314,4.254,316,3.387,416,2.894,417,5.208,418,3.448,419,3.448,420,3.448,421,3.448]],["title/controllers/UserController.html",[0,1.362,422,2.126]],["body/controllers/UserController.html",[0,0.902,2,0.902,3,0.158,4,0.158,5,0.135,7,0.289,8,0.808,12,2.033,13,0.029,15,0.863,17,1.187,18,0.863,19,0.662,20,0.938,22,1.099,24,0.389,26,0.261,28,0.158,29,0.09,32,0.009,33,0.014,34,0.009,90,1.973,95,1.579,120,3.172,121,2.931,125,1.815,128,1.806,129,2.589,132,1.249,135,1.815,137,1.579,138,1.579,139,1.159,140,1.408,142,2.363,143,1.806,145,1.381,211,1.408,233,1.408,247,1.579,249,2.414,251,3.283,257,1.675,263,1.579,264,1.408,266,3.537,268,1.579,269,1.062,278,3.283,280,1.579,322,2.411,355,2.414,422,2.154,423,1.806,424,3.291,425,3.291,426,3.291,427,2.152,428,2.152,429,2.152,430,2.152,431,2.152,432,2.152,433,2.152,434,2.152,435,2.152,436,2.152,437,2.152,438,2.152,439,2.152,440,3.997,441,2.152,442,2.152,443,3.291,444,2.152,445,2.152,446,2.152,447,2.152,448,2.152,449,3.291,450,2.152,451,2.152,452,2.152,453,2.152,454,2.152,455,2.152,456,2.152]],["title/modules/UserModule.html",[35,1.003,48,1.921]],["body/modules/UserModule.html",[2,2.003,3,0.267,4,0.267,5,0.227,13,0.029,24,0.417,26,0.439,28,0.267,29,0.152,32,0.016,33,0.021,34,0.016,35,1.648,37,1.521,38,1.521,39,1.791,40,1.791,41,1.521,42,1.791,43,1.791,48,3.704,49,2.358,50,1.791,51,1.791,53,2.824,84,3.58,89,2.989,96,2.661,422,3.495,457,3.628,458,3.628,459,3.628,460,3.628,461,3.628]],["title/injectables/UserService.html",[116,0.353,125,1.476]],["body/injectables/UserService.html",[3,0.161,4,0.161,5,0.137,7,0.293,8,0.818,13,0.03,15,0.87,17,1.196,18,0.87,19,0.667,20,0.945,22,0.991,24,0.357,26,0.265,28,0.161,29,0.092,32,0.018,33,0.015,34,0.01,68,1.292,78,1.291,116,0.361,117,0.675,120,3.027,123,1.079,125,1.513,129,2.23,132,1.256,135,1.833,136,2.756,138,1.603,140,1.43,141,0.993,142,2.385,145,1.245,148,2.179,160,2.443,184,2.443,186,2.206,197,1.292,204,1.603,205,1.43,245,2.959,257,1.396,322,1.794,323,2.179,355,2.443,357,3.787,363,1.835,364,2.795,366,1.835,368,2.795,374,2.795,377,1.835,410,1.835,462,1.835,463,3.331,464,2.186,465,2.186,466,3.331,467,3.331,468,2.186,469,2.186,470,3.331,471,4.512,472,4.035,473,2.186,474,1.603,475,1.835,476,2.186,477,5.321,478,2.186,479,2.186,480,2.186,481,2.186,482,2.186,483,3.331,484,2.186,485,2.186,486,2.186]],["title/coverage.html",[487,3.254]],["body/coverage.html",[0,1.915,1,1.465,5,0.14,6,1.879,13,0.029,19,0.331,29,0.192,32,0.01,33,0.015,34,0.01,41,0.939,63,1.465,65,1.324,69,1.465,90,1.105,91,1.324,92,1.324,103,1.465,116,0.645,118,1.879,119,1.879,125,1.017,129,0.939,155,1.642,157,1.879,158,1.879,186,1.017,191,2.005,192,1.465,194,2.487,198,1.465,205,1.465,206,2.487,207,1.465,211,1.465,212,1.879,213,2.487,216,1.879,233,1.465,234,2.487,236,1.879,246,1.879,259,1.324,270,1.206,273,1.465,286,1.879,301,1.879,306,1.879,311,1.879,321,1.879,327,1.465,328,1.879,333,1.206,338,1.206,345,1.879,353,1.105,354,1.879,378,1.879,385,1.324,386,1.879,406,1.642,412,1.642,416,1.879,422,1.465,423,1.879,462,1.879,487,1.642,488,1.879,489,2.239,490,2.239,491,6.557,492,4.094,493,5.657,494,4.568,495,4.094,496,1.879,497,4.84,498,6.01,499,3.833,500,1.879,501,1.879,502,1.642,503,1.879,504,1.879,505,1.879,506,1.879,507,2.239,508,2.239,509,1.879,510,2.239,511,2.239]],["title/dependencies.html",[38,1.639,512,2.713]],["body/dependencies.html",[13,0.03,26,0.432,27,4.135,32,0.016,33,0.021,34,0.016,38,1.495,68,2.108,73,2.615,98,1.921,99,2.615,102,2.615,108,2.333,197,2.108,223,3.465,264,2.333,269,1.76,296,2.993,513,5.865,514,3.566,515,3.566,516,3.566,517,3.566,518,3.566,519,3.566,520,3.566,521,3.566,522,3.566,523,3.566,524,3.566,525,3.566,526,3.566,527,3.566,528,3.566,529,3.566,530,3.566,531,3.566,532,3.566,533,3.566,534,3.566,535,3.566,536,3.566,537,3.566,538,3.566,539,2.993,540,3.566,541,3.566]],["title/miscellaneous/functions.html",[542,1.775,543,3.281]],["body/miscellaneous/functions.html",[7,0.662,13,0.025,32,0.022,33,0.025,34,0.022,41,2.573,509,4.141,542,3.228,543,4.141,544,4.934]],["title/index.html",[7,0.364,545,2.713,546,2.713]],["body/index.html",[13,0.028,27,2.218,32,0.013,33,0.019,34,0.013,108,1.979,121,2.218,129,1.268,196,1.493,223,1.979,298,2.218,330,2.218,474,2.218,487,2.218,488,2.538,497,2.538,502,3.097,539,2.538,547,4.419,548,3.024,549,3.024,550,2.538,551,3.024,552,3.024,553,3.024,554,3.024,555,3.024,556,2.538,557,4.222,558,3.024,559,4.865,560,3.024,561,4.222,562,4.865,563,4.222,564,5.888,565,2.538,566,3.024,567,3.024,568,4.222,569,3.024,570,3.024,571,3.024,572,3.024,573,3.024,574,3.024,575,3.024,576,3.024,577,3.024,578,3.024,579,2.538,580,2.538,581,3.024,582,2.538,583,3.024,584,6.007,585,3.024,586,3.024,587,5.888,588,3.024,589,3.024,590,4.222,591,3.024,592,3.024,593,3.024,594,3.024,595,4.222,596,4.222,597,3.024,598,3.024,599,3.024]],["title/modules.html",[37,1.86]],["body/modules.html",[13,0.024,32,0.019,33,0.024,34,0.019,36,2.843,37,1.821,46,2.568,47,2.568,48,2.568,84,2.568,89,2.144,600,6.347,601,6.347,602,6.347,603,6.347]],["title/overview.html",[604,3.724]],["body/overview.html",[2,1.167,13,0.029,32,0.012,33,0.018,34,0.012,35,0.859,36,3.847,37,1.167,38,1.167,39,1.374,40,1.374,41,1.167,42,1.374,43,1.374,44,2.335,45,2.335,46,3.173,47,3.399,48,3.399,49,1.965,50,1.374,51,1.374,84,3.73,85,2.335,86,2.335,87,2.335,88,2.335,89,3.065,90,2.838,91,2.748,92,2.999,117,0.859,125,2.611,156,1.645,193,2.041,270,2.504,317,2.335,318,2.335,338,2.504,348,2.335,350,2.335,353,2.294,385,2.748,403,2.335,404,2.335,405,2.335,604,2.335,605,2.783,606,3.981,607,2.783,608,2.783]],["title/miscellaneous/variables.html",[542,1.775,609,3.281]],["body/miscellaneous/variables.html",[7,0.305,13,0.03,18,0.439,19,0.821,32,0.01,33,0.015,34,0.01,69,2.247,76,3.189,78,1.785,103,2.247,111,2.882,125,1.033,132,1.213,133,1.345,135,1.033,145,0.702,164,2.882,183,1.91,186,1.559,194,1.669,196,1.123,198,2.247,199,2.518,200,2.518,201,2.518,206,1.669,207,2.247,208,1.91,209,1.91,210,1.91,330,2.518,353,1.123,406,1.669,412,2.518,474,4.168,475,4.769,496,1.91,499,1.91,500,2.882,501,3.47,502,3.032,503,1.91,504,2.882,505,1.91,506,2.882,542,1.489,547,2.882,550,2.882,556,2.882,565,2.882,579,2.882,580,2.882,582,1.91,609,1.91,610,4.605,611,2.275,612,2.275,613,2.275,614,2.275,615,2.275,616,2.275,617,2.275,618,3.433,619,2.275,620,3.433,621,2.275,622,2.275,623,3.433,624,3.433,625,3.433,626,3.433,627,3.433,628,3.433,629,2.275,630,2.275,631,3.433,632,2.275,633,2.275]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthUserService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IModule2.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalUserStrategy.html":{},"controllers/Module1Controller.html":{},"injectables/Module1Interceptor.html":{},"injectables/Module1Middleware.html":{},"classes/Module1Model.html":{},"modules/Module1Module.html":{},"injectables/Module1Service.html":{},"controllers/Module2Controller.html":{},"classes/Module2Model.html":{},"modules/Module2Module.html":{},"injectables/Module2MongoService.html":{},"injectables/Module2Service.html":{},"injectables/SchedulerService.html":{},"modules/ServicesModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":491,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":517,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":498,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":492,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":493,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":494,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":495,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["1.19.0",{"_index":520,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":522,"title":{},"body":{"dependencies.html":{}}}],["1.web",{"_index":632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1/3",{"_index":508,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":400,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["12",{"_index":607,"title":{},"body":{"overview.html":{}}}],["127.0.0.1",{"_index":623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":608,"title":{},"body":{"overview.html":{}}}],["2.web",{"_index":633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":537,"title":{},"body":{"dependencies.html":{}}}],["3.22.0",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33",{"_index":507,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":606,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["4.17.1",{"_index":523,"title":{},"body":{"dependencies.html":{}}}],["4.5.5",{"_index":518,"title":{},"body":{"dependencies.html":{}}}],["4000",{"_index":630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":399,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["5.1.3",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["5.9.12",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":605,"title":{},"body":{"overview.html":{}}}],["6.5.4",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":513,"title":{},"body":{"dependencies.html":{}}}],["7.0.9",{"_index":516,"title":{},"body":{"dependencies.html":{}}}],["7d",{"_index":115,"title":{},"body":{"modules/AuthModule.html":{}}}],["_env",{"_index":500,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["_env.tolowercase",{"_index":620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":417,"title":{},"body":{"classes/User.html":{}}}],["access_token",{"_index":153,"title":{},"body":{"injectables/AuthUserService.html":{}}}],["api",{"_index":557,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":440,"title":{},"body":{"controllers/UserController.html":{}}}],["apioperation",{"_index":266,"title":{},"body":{"controllers/Module1Controller.html":{},"controllers/Module2Controller.html":{},"controllers/UserController.html":{}}}],["apioperation({summary",{"_index":251,"title":{},"body":{"controllers/Module1Controller.html":{},"controllers/Module2Controller.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":314,"title":{},"body":{"classes/Module1Model.html":{},"classes/Module2Model.html":{},"classes/User.html":{}}}],["apiproperty({required",{"_index":312,"title":{},"body":{"classes/Module1Model.html":{},"classes/Module2Model.html":{},"classes/User.html":{}}}],["apiresponse",{"_index":267,"title":{},"body":{"controllers/Module1Controller.html":{},"controllers/Module2Controller.html":{}}}],["apitags",{"_index":268,"title":{},"body":{"controllers/Module1Controller.html":{},"controllers/Module2Controller.html":{},"controllers/UserController.html":{}}}],["apitags('module1",{"_index":276,"title":{},"body":{"controllers/Module1Controller.html":{}}}],["apitags('module2",{"_index":342,"title":{},"body":{"controllers/Module2Controller.html":{}}}],["apitags('user",{"_index":445,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":586,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["app/module/module1/module1.controller",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["app/module/module1/module1.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["app/module/module2/module2.module",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["app/module/user/user.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["appconfig",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appconfig().islog",{"_index":179,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":36,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["argumentshost",{"_index":165,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["async",{"_index":120,"title":{},"body":{"injectables/AuthUserService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalUserStrategy.html":{},"injectables/Module2MongoService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":94,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalUserStrategy.html":{}}}],["auth.constant",{"_index":104,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["auth.guard",{"_index":443,"title":{},"body":{"controllers/UserController.html":{}}}],["auth.guard.ts",{"_index":213,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["authguard",{"_index":214,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":215,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":235,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":84,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["authuserservice",{"_index":90,"title":{"injectables/AuthUserService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthUserService.html":{},"injectables/LocalUserStrategy.html":{},"controllers/UserController.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":142,"title":{},"body":{"injectables/AuthUserService.html":{},"injectables/LocalUserStrategy.html":{},"injectables/Module2MongoService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["body",{"_index":264,"title":{},"body":{"controllers/Module1Controller.html":{},"controllers/Module2Controller.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["boolean",{"_index":472,"title":{},"body":{"injectables/UserService.html":{}}}],["bootstrap",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Module1Module.html":{},"modules/Module2Module.html":{},"modules/ServicesModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":603,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":600,"title":{},"body":{"modules.html":{}}}],["build",{"_index":592,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":291,"title":{},"body":{"injectables/Module1Interceptor.html":{}}}],["catch",{"_index":160,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/Module2MongoService.html":{},"injectables/UserService.html":{}}}],["catch(exception",{"_index":162,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["class",{"_index":29,"title":{"classes/HttpExceptionFilter.html":{},"classes/Module1Model.html":{},"classes/Module2Model.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthUserService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalUserStrategy.html":{},"controllers/Module1Controller.html":{},"injectables/Module1Interceptor.html":{},"injectables/Module1Middleware.html":{},"classes/Module1Model.html":{},"modules/Module1Module.html":{},"injectables/Module1Service.html":{},"controllers/Module2Controller.html":{},"classes/Module2Model.html":{},"modules/Module2Module.html":{},"injectables/Module2MongoService.html":{},"injectables/Module2Service.html":{},"injectables/SchedulerService.html":{},"modules/ServicesModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":156,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/Module1Model.html":{},"classes/Module2Model.html":{},"classes/User.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":85,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":87,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":86,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":88,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_module1module",{"_index":317,"title":{},"body":{"modules/Module1Module.html":{},"overview.html":{}}}],["cluster_module1module_providers",{"_index":318,"title":{},"body":{"modules/Module1Module.html":{},"overview.html":{}}}],["cluster_module2module",{"_index":348,"title":{},"body":{"modules/Module2Module.html":{},"overview.html":{}}}],["cluster_module2module_imports",{"_index":349,"title":{},"body":{"modules/Module2Module.html":{}}}],["cluster_module2module_providers",{"_index":350,"title":{},"body":{"modules/Module2Module.html":{},"overview.html":{}}}],["cluster_servicesmodule",{"_index":403,"title":{},"body":{"modules/ServicesModule.html":{},"overview.html":{}}}],["cluster_servicesmodule_exports",{"_index":404,"title":{},"body":{"modules/ServicesModule.html":{},"overview.html":{}}}],["cluster_servicesmodule_providers",{"_index":405,"title":{},"body":{"modules/ServicesModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":457,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_imports",{"_index":458,"title":{},"body":{"modules/UserModule.html":{}}}],["compodoc",{"_index":574,"title":{},"body":{"index.html":{}}}],["components",{"_index":553,"title":{},"body":{"index.html":{}}}],["compression",{"_index":521,"title":{},"body":{"dependencies.html":{}}}],["config",{"_index":501,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configure",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["configured",{"_index":571,"title":{},"body":{"index.html":{}}}],["conflictexception",{"_index":363,"title":{},"body":{"injectables/Module2MongoService.html":{},"injectables/UserService.html":{}}}],["conflictexception('duplicate",{"_index":481,"title":{},"body":{"injectables/UserService.html":{}}}],["conflictexception(`duplicate",{"_index":373,"title":{},"body":{"injectables/Module2MongoService.html":{}}}],["connection",{"_index":569,"title":{},"body":{"index.html":{}}}],["console.error(json.stringify(json",{"_index":180,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["console.log('cron",{"_index":402,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["console.log('module1interceptor",{"_index":297,"title":{},"body":{"injectables/Module1Interceptor.html":{}}}],["console.log('module1middelvare",{"_index":310,"title":{},"body":{"injectables/Module1Middleware.html":{}}}],["console.log('start",{"_index":401,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["const",{"_index":141,"title":{},"body":{"injectables/AuthUserService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IModule2.html":{},"interfaces/IUser.html":{},"injectables/LocalUserStrategy.html":{},"injectables/Module2MongoService.html":{},"modules/ServicesModule.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":123,"title":{},"body":{"injectables/AuthUserService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalUserStrategy.html":{},"injectables/Module1Middleware.html":{},"injectables/Module2MongoService.html":{},"injectables/Module2Service.html":{},"injectables/UserService.html":{}}}],["constructor(@injectmodel('module2collection",{"_index":367,"title":{},"body":{"injectables/Module2MongoService.html":{}}}],["constructor(@injectmodel('user",{"_index":476,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(authuserservice",{"_index":237,"title":{},"body":{"injectables/LocalUserStrategy.html":{}}}],["constructor(model2model",{"_index":356,"title":{},"body":{"injectables/Module2MongoService.html":{}}}],["constructor(module2mongoservice",{"_index":379,"title":{},"body":{"injectables/Module2Service.html":{}}}],["constructor(private",{"_index":139,"title":{},"body":{"injectables/AuthUserService.html":{},"injectables/LocalUserStrategy.html":{},"controllers/Module1Controller.html":{},"controllers/Module2Controller.html":{},"injectables/Module2Service.html":{},"controllers/UserController.html":{}}}],["constructor(usermodel",{"_index":464,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":124,"title":{},"body":{"injectables/AuthUserService.html":{}}}],["consumer",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(module1middleware).forroutes(module1controller",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["context",{"_index":293,"title":{},"body":{"injectables/Module1Interceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/Module1Controller.html":{},"controllers/Module2Controller.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/Module1Controller.html":{},"controllers/Module2Controller.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('module1",{"_index":275,"title":{},"body":{"controllers/Module1Controller.html":{}}}],["controller('module2",{"_index":341,"title":{},"body":{"controllers/Module2Controller.html":{}}}],["controller('user",{"_index":446,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/Module1Controller.html":{},"modules/Module1Module.html":{},"controllers/Module2Controller.html":{},"modules/Module2Module.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["corswhitelist",{"_index":626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coverage",{"_index":487,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":355,"title":{},"body":{"injectables/Module2MongoService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(model2model",{"_index":360,"title":{},"body":{"injectables/Module2MongoService.html":{}}}],["create(user",{"_index":467,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser",{"_index":424,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(@body",{"_index":447,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(user",{"_index":427,"title":{},"body":{"controllers/UserController.html":{}}}],["cron",{"_index":391,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["cron(cronexpression.every_hour",{"_index":389,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["cron(new",{"_index":394,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["cronexpression",{"_index":397,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["ctx",{"_index":173,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":175,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["database",{"_index":565,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":395,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["date(date.now",{"_index":398,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["db",{"_index":627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Module1Module.html":{},"modules/Module2Module.html":{},"modules/ServicesModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/Module1Controller.html":{},"classes/Module1Model.html":{},"controllers/Module2Controller.html":{},"classes/Module2Model.html":{},"injectables/SchedulerService.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["default",{"_index":474,"title":{},"body":{"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":107,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthUserService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalUserStrategy.html":{},"controllers/Module1Controller.html":{},"injectables/Module1Interceptor.html":{},"injectables/Module1Middleware.html":{},"classes/Module1Model.html":{},"injectables/Module1Service.html":{},"controllers/Module2Controller.html":{},"classes/Module2Model.html":{},"injectables/Module2MongoService.html":{},"injectables/Module2Service.html":{},"injectables/SchedulerService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":38,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Module1Module.html":{},"modules/Module2Module.html":{},"modules/ServicesModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":196,"title":{},"body":{"interfaces/IModule2.html":{},"controllers/Module1Controller.html":{},"classes/Module1Model.html":{},"controllers/Module2Controller.html":{},"classes/Module2Model.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["description'})@apiresponse({status",{"_index":253,"title":{},"body":{"controllers/Module1Controller.html":{}}}],["dev",{"_index":618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dev_config",{"_index":504,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":561,"title":{},"body":{"index.html":{}}}],["document",{"_index":575,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":488,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["e2e",{"_index":597,"title":{},"body":{"index.html":{}}}],["elemental",{"_index":572,"title":{},"body":{"index.html":{}}}],["email",{"_index":135,"title":{},"body":{"injectables/AuthUserService.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalUserStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["email'})@apibearerauth()@useguards(jwtauthguard)@get",{"_index":434,"title":{},"body":{"controllers/UserController.html":{}}}],["environment",{"_index":502,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":486,"title":{},"body":{"injectables/UserService.html":{}}}],["error",{"_index":184,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/Module2MongoService.html":{},"injectables/UserService.html":{}}}],["error.getresponse",{"_index":189,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.getstatus",{"_index":188,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.message",{"_index":374,"title":{},"body":{"injectables/Module2MongoService.html":{},"injectables/UserService.html":{}}}],["event",{"_index":392,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["exc",{"_index":170,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception",{"_index":167,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":158,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:19",{"_index":169,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts:7",{"_index":166,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":159,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["executioncontext",{"_index":289,"title":{},"body":{"injectables/Module1Interceptor.html":{}}}],["expiresin",{"_index":114,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthUserService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IModule2.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalUserStrategy.html":{},"controllers/Module1Controller.html":{},"injectables/Module1Interceptor.html":{},"injectables/Module1Middleware.html":{},"classes/Module1Model.html":{},"modules/Module1Module.html":{},"injectables/Module1Service.html":{},"controllers/Module2Controller.html":{},"classes/Module2Model.html":{},"modules/Module2Module.html":{},"injectables/Module2MongoService.html":{},"injectables/Module2Service.html":{},"injectables/SchedulerService.html":{},"modules/ServicesModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Module1Module.html":{},"modules/Module2Module.html":{},"modules/ServicesModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{},"index.html":{}}}],["extends",{"_index":202,"title":{},"body":{"interfaces/IModule2.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalUserStrategy.html":{}}}],["extractjwt",{"_index":221,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":228,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"interfaces/IModule2.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/Module1Model.html":{},"classes/Module2Model.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["features",{"_index":554,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthUserService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IModule2.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalUserStrategy.html":{},"controllers/Module1Controller.html":{},"injectables/Module1Interceptor.html":{},"injectables/Module1Middleware.html":{},"classes/Module1Model.html":{},"modules/Module1Module.html":{},"injectables/Module1Service.html":{},"controllers/Module2Controller.html":{},"classes/Module2Model.html":{},"modules/Module2Module.html":{},"injectables/Module2MongoService.html":{},"injectables/Module2Service.html":{},"injectables/SchedulerService.html":{},"modules/ServicesModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["filter",{"_index":567,"title":{},"body":{"index.html":{}}}],["find",{"_index":322,"title":{},"body":{"injectables/Module1Service.html":{},"controllers/Module2Controller.html":{},"injectables/Module2MongoService.html":{},"injectables/Module2Service.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["find(id",{"_index":323,"title":{},"body":{"injectables/Module1Service.html":{},"injectables/Module2MongoService.html":{},"injectables/Module2Service.html":{},"injectables/UserService.html":{}}}],["findbyemail",{"_index":463,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyemail(email",{"_index":470,"title":{},"body":{"injectables/UserService.html":{}}}],["finduser",{"_index":425,"title":{},"body":{"controllers/UserController.html":{}}}],["finduser(@param('id",{"_index":450,"title":{},"body":{"controllers/UserController.html":{}}}],["finduser(id",{"_index":430,"title":{},"body":{"controllers/UserController.html":{}}}],["finduserbyemail",{"_index":426,"title":{},"body":{"controllers/UserController.html":{}}}],["finduserbyemail(@query('email",{"_index":452,"title":{},"body":{"controllers/UserController.html":{}}}],["finduserbyemail(email",{"_index":433,"title":{},"body":{"controllers/UserController.html":{}}}],["found",{"_index":377,"title":{},"body":{"injectables/Module2MongoService.html":{},"injectables/UserService.html":{}}}],["framework",{"_index":548,"title":{},"body":{"index.html":{}}}],["function",{"_index":306,"title":{},"body":{"injectables/Module1Middleware.html":{},"coverage.html":{}}}],["functions",{"_index":543,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/favicon.ico",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["get(':id",{"_index":280,"title":{},"body":{"controllers/Module1Controller.html":{},"controllers/Module2Controller.html":{},"controllers/UserController.html":{}}}],["get(@param('id",{"_index":281,"title":{},"body":{"controllers/Module1Controller.html":{},"controllers/Module2Controller.html":{}}}],["get(id",{"_index":250,"title":{},"body":{"controllers/Module1Controller.html":{},"controllers/Module2Controller.html":{}}}],["getfavicon",{"_index":9,"title":{},"body":{"controllers/AppController.html":{}}}],["getfavicon(@res",{"_index":30,"title":{},"body":{"controllers/AppController.html":{}}}],["getfavicon(res",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":545,"title":{"index.html":{}},"body":{}}],["handlecron",{"_index":387,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["helmet",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["host",{"_index":164,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["host.switchtohttp",{"_index":174,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["hour",{"_index":393,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["http://127.0.0.1:3000/api/v0",{"_index":560,"title":{},"body":{"index.html":{}}}],["http://127.0.0.1:3000/doc",{"_index":576,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":163,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":155,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["httpmodule",{"_index":407,"title":{},"body":{"modules/ServicesModule.html":{}}}],["https://frontend",{"_index":631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpstatus",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/Module1Controller.html":{},"controllers/Module2Controller.html":{}}}],["httpstatus.created",{"_index":283,"title":{},"body":{"controllers/Module1Controller.html":{},"controllers/Module2Controller.html":{}}}],["httpstatus.ok",{"_index":279,"title":{},"body":{"controllers/Module1Controller.html":{},"controllers/Module2Controller.html":{}}}],["id",{"_index":257,"title":{},"body":{"controllers/Module1Controller.html":{},"classes/Module1Model.html":{},"injectables/Module1Service.html":{},"controllers/Module2Controller.html":{},"classes/Module2Model.html":{},"injectables/Module2MongoService.html":{},"injectables/Module2Service.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["id'})@apibearerauth()@useguards(jwtauthguard)@get(':id",{"_index":431,"title":{},"body":{"controllers/UserController.html":{}}}],["id'})@apiresponse({status",{"_index":331,"title":{},"body":{"controllers/Module2Controller.html":{}}}],["identifier",{"_index":489,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":229,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["imodule2",{"_index":192,"title":{"interfaces/IModule2.html":{}},"body":{"interfaces/IModule2.html":{},"injectables/Module2MongoService.html":{},"coverage.html":{}}}],["implemented",{"_index":564,"title":{},"body":{"index.html":{}}}],["implements",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/Module1Interceptor.html":{},"injectables/Module1Middleware.html":{}}}],["import",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthUserService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IModule2.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalUserStrategy.html":{},"controllers/Module1Controller.html":{},"injectables/Module1Interceptor.html":{},"injectables/Module1Middleware.html":{},"classes/Module1Model.html":{},"modules/Module1Module.html":{},"injectables/Module1Service.html":{},"controllers/Module2Controller.html":{},"classes/Module2Model.html":{},"modules/Module2Module.html":{},"injectables/Module2MongoService.html":{},"injectables/Module2Service.html":{},"injectables/SchedulerService.html":{},"modules/ServicesModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["important",{"_index":552,"title":{},"body":{"index.html":{}}}],["imports",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Module2Module.html":{},"modules/ServicesModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AuthUserService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IModule2.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalUserStrategy.html":{},"controllers/Module1Controller.html":{},"injectables/Module1Interceptor.html":{},"injectables/Module1Middleware.html":{},"classes/Module1Model.html":{},"injectables/Module1Service.html":{},"controllers/Module2Controller.html":{},"classes/Module2Model.html":{},"injectables/Module2MongoService.html":{},"injectables/Module2Service.html":{},"injectables/SchedulerService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index.services",{"_index":408,"title":{},"body":{"modules/ServicesModule.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthUserService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IModule2.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalUserStrategy.html":{},"controllers/Module1Controller.html":{},"injectables/Module1Interceptor.html":{},"injectables/Module1Middleware.html":{},"classes/Module1Model.html":{},"modules/Module1Module.html":{},"injectables/Module1Service.html":{},"controllers/Module2Controller.html":{},"classes/Module2Model.html":{},"modules/Module2Module.html":{},"injectables/Module2MongoService.html":{},"injectables/Module2Service.html":{},"injectables/SchedulerService.html":{},"modules/ServicesModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":116,"title":{"injectables/AuthUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalUserStrategy.html":{},"injectables/Module1Interceptor.html":{},"injectables/Module1Middleware.html":{},"injectables/Module1Service.html":{},"injectables/Module2MongoService.html":{},"injectables/Module2Service.html":{},"injectables/SchedulerService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AuthUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalUserStrategy.html":{},"injectables/Module1Interceptor.html":{},"injectables/Module1Middleware.html":{},"injectables/Module1Service.html":{},"injectables/Module2MongoService.html":{},"injectables/Module2Service.html":{},"injectables/SchedulerService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":117,"title":{},"body":{"injectables/AuthUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalUserStrategy.html":{},"injectables/Module1Interceptor.html":{},"injectables/Module1Middleware.html":{},"injectables/Module1Service.html":{},"injectables/Module2MongoService.html":{},"injectables/Module2Service.html":{},"injectables/SchedulerService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectmodel",{"_index":366,"title":{},"body":{"injectables/Module2MongoService.html":{},"injectables/UserService.html":{}}}],["installation",{"_index":583,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":585,"title":{},"body":{"index.html":{}}}],["instance",{"_index":578,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":185,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["intercept",{"_index":287,"title":{},"body":{"injectables/Module1Interceptor.html":{}}}],["intercept(context",{"_index":288,"title":{},"body":{"injectables/Module1Interceptor.html":{}}}],["interceptor",{"_index":298,"title":{},"body":{"injectables/Module1Interceptor.html":{},"injectables/Module1Middleware.html":{},"index.html":{}}}],["interface",{"_index":191,"title":{"interfaces/IModule2.html":{},"interfaces/IUser.html":{}},"body":{"interfaces/IModule2.html":{},"interfaces/IUser.html":{},"coverage.html":{}}}],["interfaces",{"_index":193,"title":{},"body":{"interfaces/IModule2.html":{},"interfaces/IUser.html":{},"overview.html":{}}}],["internalservererrorexception",{"_index":172,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["internalservererrorexception(exc.message",{"_index":187,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["iscors",{"_index":625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isdevenvironment",{"_index":619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["islog",{"_index":624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isprodenvenvironment",{"_index":621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iuser",{"_index":205,"title":{"interfaces/IUser.html":{}},"body":{"interfaces/IUser.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["json",{"_index":177,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["jwt",{"_index":108,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["jwt.strategy",{"_index":105,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":211,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["jwtconstants",{"_index":103,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":112,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":227,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":101,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":110,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":126,"title":{},"body":{"injectables/AuthUserService.html":{}}}],["jwtstrategy",{"_index":91,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Module1Module.html":{},"modules/Module2Module.html":{},"modules/ServicesModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["limit",{"_index":525,"title":{},"body":{"dependencies.html":{}}}],["literal",{"_index":171,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["local",{"_index":99,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalUserStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":233,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"injectables/LocalAuthGuard.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["localhost",{"_index":579,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["localuserstrategy",{"_index":92,"title":{"injectables/LocalUserStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalUserStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":121,"title":{},"body":{"injectables/AuthUserService.html":{},"controllers/UserController.html":{},"index.html":{}}}],["login'})@useguards(localauthguard)@post('login",{"_index":436,"title":{},"body":{"controllers/UserController.html":{}}}],["login(@body",{"_index":455,"title":{},"body":{"controllers/UserController.html":{}}}],["login(user",{"_index":128,"title":{},"body":{"injectables/AuthUserService.html":{},"controllers/UserController.html":{}}}],["lowercase",{"_index":209,"title":{},"body":{"interfaces/IUser.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthUserService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IModule2.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalUserStrategy.html":{},"controllers/Module1Controller.html":{},"injectables/Module1Interceptor.html":{},"injectables/Module1Middleware.html":{},"classes/Module1Model.html":{},"modules/Module1Module.html":{},"injectables/Module1Service.html":{},"controllers/Module2Controller.html":{},"classes/Module2Model.html":{},"modules/Module2Module.html":{},"injectables/Module2MongoService.html":{},"injectables/Module2Service.html":{},"injectables/SchedulerService.html":{},"modules/ServicesModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":252,"title":{},"body":{"controllers/Module1Controller.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthUserService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalUserStrategy.html":{},"controllers/Module1Controller.html":{},"injectables/Module1Interceptor.html":{},"injectables/Module1Middleware.html":{},"injectables/Module1Service.html":{},"controllers/Module2Controller.html":{},"injectables/Module2MongoService.html":{},"injectables/Module2Service.html":{},"injectables/SchedulerService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["middelware",{"_index":566,"title":{},"body":{"index.html":{}}}],["middlewareconsumer",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["miscellaneous",{"_index":542,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":590,"title":{},"body":{"index.html":{}}}],["model",{"_index":357,"title":{},"body":{"injectables/Module2MongoService.html":{},"injectables/UserService.html":{}}}],["model2model",{"_index":359,"title":{},"body":{"injectables/Module2MongoService.html":{}}}],["model2obj",{"_index":369,"title":{},"body":{"injectables/Module2MongoService.html":{}}}],["model2obj._id",{"_index":372,"title":{},"body":{"injectables/Module2MongoService.html":{}}}],["model2obj.save",{"_index":371,"title":{},"body":{"injectables/Module2MongoService.html":{}}}],["modularized",{"_index":555,"title":{},"body":{"index.html":{}}}],["module",{"_index":35,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Module1Module.html":{},"modules/Module2Module.html":{},"modules/ServicesModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Module1Module.html":{},"modules/Module2Module.html":{},"modules/ServicesModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["module1",{"_index":248,"title":{},"body":{"controllers/Module1Controller.html":{}}}],["module1.controller",{"_index":320,"title":{},"body":{"modules/Module1Module.html":{}}}],["module1.service",{"_index":271,"title":{},"body":{"controllers/Module1Controller.html":{},"modules/Module1Module.html":{}}}],["module1controller",{"_index":65,"title":{"controllers/Module1Controller.html":{}},"body":{"modules/AppModule.html":{},"controllers/Module1Controller.html":{},"modules/Module1Module.html":{},"coverage.html":{}}}],["module1interceptor",{"_index":273,"title":{"injectables/Module1Interceptor.html":{}},"body":{"controllers/Module1Controller.html":{},"injectables/Module1Interceptor.html":{},"coverage.html":{}}}],["module1middleware",{"_index":63,"title":{"injectables/Module1Middleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/Module1Middleware.html":{},"coverage.html":{}}}],["module1model",{"_index":259,"title":{"classes/Module1Model.html":{}},"body":{"controllers/Module1Controller.html":{},"classes/Module1Model.html":{},"injectables/Module1Service.html":{},"coverage.html":{}}}],["module1module",{"_index":46,"title":{"modules/Module1Module.html":{}},"body":{"modules/AppModule.html":{},"modules/Module1Module.html":{},"modules.html":{},"overview.html":{}}}],["module1service",{"_index":270,"title":{"injectables/Module1Service.html":{}},"body":{"controllers/Module1Controller.html":{},"modules/Module1Module.html":{},"injectables/Module1Service.html":{},"coverage.html":{},"overview.html":{}}}],["module2",{"_index":329,"title":{},"body":{"controllers/Module2Controller.html":{}}}],["module2.controller",{"_index":352,"title":{},"body":{"modules/Module2Module.html":{}}}],["module2.service",{"_index":339,"title":{},"body":{"controllers/Module2Controller.html":{},"modules/Module2Module.html":{}}}],["module2collection",{"_index":414,"title":{},"body":{"modules/ServicesModule.html":{}}}],["module2controller",{"_index":327,"title":{"controllers/Module2Controller.html":{}},"body":{"controllers/Module2Controller.html":{},"modules/Module2Module.html":{},"coverage.html":{}}}],["module2model",{"_index":333,"title":{"classes/Module2Model.html":{}},"body":{"controllers/Module2Controller.html":{},"classes/Module2Model.html":{},"injectables/Module2MongoService.html":{},"injectables/Module2Service.html":{},"coverage.html":{}}}],["module2module",{"_index":47,"title":{"modules/Module2Module.html":{}},"body":{"modules/AppModule.html":{},"modules/Module2Module.html":{},"modules.html":{},"overview.html":{}}}],["module2mongoservice",{"_index":353,"title":{"injectables/Module2MongoService.html":{}},"body":{"injectables/Module2MongoService.html":{},"injectables/Module2Service.html":{},"modules/ServicesModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["module2schema",{"_index":198,"title":{},"body":{"interfaces/IModule2.html":{},"modules/ServicesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["module2service",{"_index":338,"title":{"injectables/Module2Service.html":{}},"body":{"controllers/Module2Controller.html":{},"modules/Module2Module.html":{},"injectables/Module2Service.html":{},"coverage.html":{},"overview.html":{}}}],["modules",{"_index":37,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Module1Module.html":{},"modules/Module2Module.html":{},"modules/ServicesModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo",{"_index":330,"title":{},"body":{"controllers/Module2Controller.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mongo'})@apiresponse({status",{"_index":335,"title":{},"body":{"controllers/Module2Controller.html":{}}}],["mongodb",{"_index":568,"title":{},"body":{"index.html":{}}}],["mongoose",{"_index":197,"title":{},"body":{"interfaces/IModule2.html":{},"interfaces/IUser.html":{},"injectables/Module2MongoService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["mongoose.document",{"_index":203,"title":{},"body":{"interfaces/IModule2.html":{},"interfaces/IUser.html":{}}}],["mongoose.schema",{"_index":199,"title":{},"body":{"interfaces/IModule2.html":{},"interfaces/IUser.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{}}}],["mongoosemodule.forfeature",{"_index":413,"title":{},"body":{"modules/ServicesModule.html":{}}}],["mongoosemodule.forroot(`mongodb://${appconfig().db.mongo.url}/${appconfig().db.mongo.database",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthUserService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalUserStrategy.html":{},"controllers/Module1Controller.html":{},"injectables/Module1Interceptor.html":{},"injectables/Module1Middleware.html":{},"injectables/Module1Service.html":{},"controllers/Module2Controller.html":{},"injectables/Module2MongoService.html":{},"injectables/Module2Service.html":{},"modules/ServicesModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["nestinterceptor",{"_index":295,"title":{},"body":{"injectables/Module1Interceptor.html":{}}}],["nestjs",{"_index":547,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["nestjs/common",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthUserService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalUserStrategy.html":{},"controllers/Module1Controller.html":{},"injectables/Module1Interceptor.html":{},"injectables/Module1Middleware.html":{},"modules/Module1Module.html":{},"injectables/Module1Service.html":{},"controllers/Module2Controller.html":{},"modules/Module2Module.html":{},"injectables/Module2MongoService.html":{},"injectables/Module2Service.html":{},"injectables/SchedulerService.html":{},"modules/ServicesModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":514,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthUserService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"injectables/Module2MongoService.html":{},"modules/ServicesModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalUserStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":515,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"injectables/SchedulerService.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":269,"title":{},"body":{"controllers/Module1Controller.html":{},"classes/Module1Model.html":{},"controllers/Module2Controller.html":{},"classes/Module2Model.html":{},"classes/User.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":309,"title":{},"body":{"injectables/Module1Middleware.html":{}}}],["nestmodule",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":186,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IModule2.html":{},"interfaces/IUser.html":{},"injectables/LocalUserStrategy.html":{},"injectables/Module2MongoService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":290,"title":{},"body":{"injectables/Module1Interceptor.html":{},"injectables/Module1Middleware.html":{}}}],["next.handle",{"_index":300,"title":{},"body":{"injectables/Module1Interceptor.html":{}}}],["notfoundexception",{"_index":364,"title":{},"body":{"injectables/Module2MongoService.html":{},"injectables/UserService.html":{}}}],["notfoundexception('not",{"_index":484,"title":{},"body":{"injectables/UserService.html":{}}}],["notfoundexception(`not",{"_index":376,"title":{},"body":{"injectables/Module2MongoService.html":{}}}],["npm",{"_index":584,"title":{},"body":{"index.html":{}}}],["null",{"_index":146,"title":{},"body":{"injectables/AuthUserService.html":{}}}],["number",{"_index":182,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["object",{"_index":183,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":294,"title":{},"body":{"injectables/Module1Interceptor.html":{}}}],["ok",{"_index":299,"title":{},"body":{"injectables/Module1Interceptor.html":{},"injectables/Module1Middleware.html":{}}}],["operation",{"_index":336,"title":{},"body":{"controllers/Module2Controller.html":{}}}],["optional",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthUserService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IModule2.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalUserStrategy.html":{},"controllers/Module1Controller.html":{},"injectables/Module1Interceptor.html":{},"injectables/Module1Middleware.html":{},"injectables/Module1Service.html":{},"controllers/Module2Controller.html":{},"injectables/Module2MongoService.html":{},"injectables/Module2Service.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["out",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Module1Module.html":{},"modules/Module2Module.html":{},"modules/ServicesModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":604,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":512,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":263,"title":{},"body":{"controllers/Module1Controller.html":{},"controllers/Module2Controller.html":{},"controllers/UserController.html":{}}}],["parameters",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthUserService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalUserStrategy.html":{},"controllers/Module1Controller.html":{},"injectables/Module1Interceptor.html":{},"injectables/Module1Middleware.html":{},"injectables/Module1Service.html":{},"controllers/Module2Controller.html":{},"injectables/Module2MongoService.html":{},"injectables/Module2Service.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["parser",{"_index":519,"title":{},"body":{"dependencies.html":{}}}],["passport",{"_index":223,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalUserStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["passportmodule",{"_index":97,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":106,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":224,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalUserStrategy.html":{}}}],["passportstrategy(strategy",{"_index":225,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalUserStrategy.html":{}}}],["password",{"_index":133,"title":{},"body":{"injectables/AuthUserService.html":{},"interfaces/IUser.html":{},"injectables/LocalUserStrategy.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["passwordfield",{"_index":243,"title":{},"body":{"injectables/LocalUserStrategy.html":{}}}],["payload",{"_index":149,"title":{},"body":{"injectables/AuthUserService.html":{},"injectables/JwtStrategy.html":{},"controllers/Module1Controller.html":{},"injectables/Module1Service.html":{},"controllers/Module2Controller.html":{},"injectables/Module2Service.html":{}}}],["payload._id",{"_index":231,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":232,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["port",{"_index":580,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":249,"title":{},"body":{"controllers/Module1Controller.html":{},"controllers/Module2Controller.html":{},"controllers/UserController.html":{}}}],["post('login",{"_index":454,"title":{},"body":{"controllers/UserController.html":{}}}],["post(@body",{"_index":284,"title":{},"body":{"controllers/Module1Controller.html":{},"controllers/Module2Controller.html":{}}}],["post(payload",{"_index":258,"title":{},"body":{"controllers/Module1Controller.html":{},"controllers/Module2Controller.html":{}}}],["prefix",{"_index":247,"title":{},"body":{"controllers/Module1Controller.html":{},"controllers/Module2Controller.html":{},"controllers/UserController.html":{}}}],["prepareexception",{"_index":161,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["prepareexception(exc",{"_index":168,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["private",{"_index":140,"title":{},"body":{"injectables/AuthUserService.html":{},"injectables/Module2MongoService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["process.env.environment",{"_index":617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prod",{"_index":582,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["prod_config",{"_index":506,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["production",{"_index":562,"title":{},"body":{"index.html":{}}}],["project",{"_index":556,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":136,"title":{},"body":{"injectables/AuthUserService.html":{},"injectables/LocalUserStrategy.html":{},"controllers/Module2Controller.html":{},"injectables/Module2MongoService.html":{},"injectables/Module2Service.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":195,"title":{},"body":{"interfaces/IModule2.html":{},"interfaces/IUser.html":{},"classes/Module1Model.html":{},"classes/Module2Model.html":{},"classes/User.html":{}}}],["providers",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Module1Module.html":{},"modules/Module2Module.html":{},"modules/ServicesModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["query",{"_index":439,"title":{},"body":{"controllers/UserController.html":{}}}],["rate",{"_index":524,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":204,"title":{},"body":{"interfaces/IModule2.html":{},"injectables/Module2MongoService.html":{},"injectables/UserService.html":{}}}],["ready",{"_index":559,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":551,"title":{},"body":{"index.html":{}}}],["req",{"_index":308,"title":{},"body":{"injectables/Module1Middleware.html":{}}}],["request",{"_index":305,"title":{},"body":{"injectables/Module1Middleware.html":{}}}],["required",{"_index":316,"title":{},"body":{"classes/Module1Model.html":{},"classes/Module2Model.html":{},"classes/User.html":{}}}],["requirements",{"_index":577,"title":{},"body":{"index.html":{}}}],["res",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/Module1Middleware.html":{}}}],["res.status(httpstatus.no_content).send",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["reset",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Module1Module.html":{},"modules/Module2Module.html":{},"modules/ServicesModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/Module1Middleware.html":{}}}],["response.status(status).send(json",{"_index":181,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["rest",{"_index":558,"title":{},"body":{"index.html":{}}}],["result",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthUserService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IModule2.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalUserStrategy.html":{},"controllers/Module1Controller.html":{},"injectables/Module1Interceptor.html":{},"injectables/Module1Middleware.html":{},"classes/Module1Model.html":{},"modules/Module1Module.html":{},"injectables/Module1Service.html":{},"controllers/Module2Controller.html":{},"classes/Module2Model.html":{},"modules/Module2Module.html":{},"injectables/Module2MongoService.html":{},"injectables/Module2Service.html":{},"injectables/SchedulerService.html":{},"modules/ServicesModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.'})@get(':id",{"_index":255,"title":{},"body":{"controllers/Module1Controller.html":{},"controllers/Module2Controller.html":{}}}],["result.'})@post",{"_index":261,"title":{},"body":{"controllers/Module1Controller.html":{},"controllers/Module2Controller.html":{}}}],["results",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthUserService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IModule2.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalUserStrategy.html":{},"controllers/Module1Controller.html":{},"injectables/Module1Interceptor.html":{},"injectables/Module1Middleware.html":{},"classes/Module1Model.html":{},"modules/Module1Module.html":{},"injectables/Module1Service.html":{},"controllers/Module2Controller.html":{},"classes/Module2Model.html":{},"modules/Module2Module.html":{},"injectables/Module2MongoService.html":{},"injectables/Module2Service.html":{},"injectables/SchedulerService.html":{},"modules/ServicesModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":145,"title":{},"body":{"injectables/AuthUserService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalUserStrategy.html":{},"controllers/Module1Controller.html":{},"injectables/Module1Interceptor.html":{},"injectables/Module1Service.html":{},"controllers/Module2Controller.html":{},"injectables/Module2MongoService.html":{},"injectables/Module2Service.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthUserService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalUserStrategy.html":{},"controllers/Module1Controller.html":{},"injectables/Module1Interceptor.html":{},"injectables/Module1Middleware.html":{},"injectables/Module1Service.html":{},"controllers/Module2Controller.html":{},"injectables/Module2MongoService.html":{},"injectables/Module2Service.html":{},"injectables/SchedulerService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":587,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":296,"title":{},"body":{"injectables/Module1Interceptor.html":{},"dependencies.html":{}}}],["save",{"_index":334,"title":{},"body":{"controllers/Module2Controller.html":{}}}],["schedulemodule",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["scheduler",{"_index":573,"title":{},"body":{"index.html":{}}}],["scheduler/scheduler.service",{"_index":411,"title":{},"body":{"modules/ServicesModule.html":{}}}],["schedulerservice",{"_index":385,"title":{"injectables/SchedulerService.html":{}},"body":{"injectables/SchedulerService.html":{},"modules/ServicesModule.html":{},"coverage.html":{},"overview.html":{}}}],["schema",{"_index":415,"title":{},"body":{"modules/ServicesModule.html":{}}}],["search",{"_index":254,"title":{},"body":{"controllers/Module1Controller.html":{},"controllers/Module2Controller.html":{}}}],["secret",{"_index":111,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":230,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["security",{"_index":563,"title":{},"body":{"index.html":{}}}],["server",{"_index":570,"title":{},"body":{"index.html":{}}}],["servicesmodule",{"_index":89,"title":{"modules/ServicesModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/Module2Module.html":{},"modules/ServicesModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["session",{"_index":109,"title":{},"body":{"modules/AuthModule.html":{}}}],["set",{"_index":581,"title":{},"body":{"index.html":{}}}],["shared/auth/auth",{"_index":441,"title":{},"body":{"controllers/UserController.html":{}}}],["shared/auth/auth.module",{"_index":461,"title":{},"body":{"modules/UserModule.html":{}}}],["shared/auth/jwt",{"_index":442,"title":{},"body":{"controllers/UserController.html":{}}}],["shared/auth/local",{"_index":444,"title":{},"body":{"controllers/UserController.html":{}}}],["shared/config/app.config",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{}}}],["shared/interceptor/module1.interceptor",{"_index":274,"title":{},"body":{"controllers/Module1Controller.html":{}}}],["shared/middelware/module1.middleware",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/model/module1.model",{"_index":272,"title":{},"body":{"controllers/Module1Controller.html":{},"injectables/Module1Service.html":{}}}],["shared/model/module2.model",{"_index":340,"title":{},"body":{"controllers/Module2Controller.html":{},"injectables/Module2MongoService.html":{},"injectables/Module2Service.html":{}}}],["shared/model/user.model",{"_index":138,"title":{},"body":{"injectables/AuthUserService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["shared/schema/module2.schema",{"_index":365,"title":{},"body":{"injectables/Module2MongoService.html":{},"modules/ServicesModule.html":{}}}],["shared/schema/user.schema",{"_index":410,"title":{},"body":{"modules/ServicesModule.html":{},"injectables/UserService.html":{}}}],["shared/services/index.services",{"_index":137,"title":{},"body":{"injectables/AuthUserService.html":{},"injectables/Module2Service.html":{},"controllers/UserController.html":{}}}],["shared/services/services.module",{"_index":96,"title":{},"body":{"modules/AuthModule.html":{},"modules/Module2Module.html":{},"modules/UserModule.html":{}}}],["sharedservices",{"_index":412,"title":{},"body":{"modules/ServicesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["showpassword",{"_index":471,"title":{},"body":{"injectables/UserService.html":{}}}],["signoptions",{"_index":113,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthUserService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IModule2.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalUserStrategy.html":{},"controllers/Module1Controller.html":{},"injectables/Module1Interceptor.html":{},"injectables/Module1Middleware.html":{},"classes/Module1Model.html":{},"modules/Module1Module.html":{},"injectables/Module1Service.html":{},"controllers/Module2Controller.html":{},"classes/Module2Model.html":{},"modules/Module2Module.html":{},"injectables/Module2MongoService.html":{},"injectables/Module2Service.html":{},"injectables/SchedulerService.html":{},"modules/ServicesModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["src/.../app.config.ts",{"_index":610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.constant.ts",{"_index":612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../dev.config.ts",{"_index":611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":544,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../module2.schema.ts",{"_index":613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../prod.config.ts",{"_index":614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../services.module.ts",{"_index":615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:7",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:28",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/module/module1/module1.controller.ts",{"_index":246,"title":{},"body":{"controllers/Module1Controller.html":{},"coverage.html":{}}}],["src/app/module/module1/module1.controller.ts:19",{"_index":256,"title":{},"body":{"controllers/Module1Controller.html":{}}}],["src/app/module/module1/module1.controller.ts:29",{"_index":262,"title":{},"body":{"controllers/Module1Controller.html":{}}}],["src/app/module/module1/module1.module.ts",{"_index":319,"title":{},"body":{"modules/Module1Module.html":{}}}],["src/app/module/module1/module1.service.ts",{"_index":321,"title":{},"body":{"injectables/Module1Service.html":{},"coverage.html":{}}}],["src/app/module/module1/module1.service.ts:10",{"_index":326,"title":{},"body":{"injectables/Module1Service.html":{}}}],["src/app/module/module1/module1.service.ts:6",{"_index":324,"title":{},"body":{"injectables/Module1Service.html":{}}}],["src/app/module/module2/module2.controller.ts",{"_index":328,"title":{},"body":{"controllers/Module2Controller.html":{},"coverage.html":{}}}],["src/app/module/module2/module2.controller.ts:17",{"_index":332,"title":{},"body":{"controllers/Module2Controller.html":{}}}],["src/app/module/module2/module2.controller.ts:27",{"_index":337,"title":{},"body":{"controllers/Module2Controller.html":{}}}],["src/app/module/module2/module2.module.ts",{"_index":351,"title":{},"body":{"modules/Module2Module.html":{}}}],["src/app/module/module2/module2.service.ts",{"_index":378,"title":{},"body":{"injectables/Module2Service.html":{},"coverage.html":{}}}],["src/app/module/module2/module2.service.ts:13",{"_index":382,"title":{},"body":{"injectables/Module2Service.html":{}}}],["src/app/module/module2/module2.service.ts:6",{"_index":380,"title":{},"body":{"injectables/Module2Service.html":{}}}],["src/app/module/module2/module2.service.ts:9",{"_index":381,"title":{},"body":{"injectables/Module2Service.html":{}}}],["src/app/module/user/user.controller.ts",{"_index":423,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/app/module/user/user.controller.ts:16",{"_index":429,"title":{},"body":{"controllers/UserController.html":{}}}],["src/app/module/user/user.controller.ts:24",{"_index":432,"title":{},"body":{"controllers/UserController.html":{}}}],["src/app/module/user/user.controller.ts:32",{"_index":435,"title":{},"body":{"controllers/UserController.html":{}}}],["src/app/module/user/user.controller.ts:39",{"_index":437,"title":{},"body":{"controllers/UserController.html":{}}}],["src/app/module/user/user.module.ts",{"_index":459,"title":{},"body":{"modules/UserModule.html":{}}}],["src/app/shared/auth/auth",{"_index":118,"title":{},"body":{"injectables/AuthUserService.html":{},"coverage.html":{}}}],["src/app/shared/auth/auth.constant.ts",{"_index":496,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/auth/auth.module.ts",{"_index":93,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/shared/auth/jwt",{"_index":212,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/app/shared/auth/jwt.strategy.ts",{"_index":216,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/app/shared/auth/jwt.strategy.ts:16",{"_index":220,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/app/shared/auth/jwt.strategy.ts:7",{"_index":218,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/app/shared/auth/local",{"_index":234,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"injectables/LocalUserStrategy.html":{},"coverage.html":{}}}],["src/app/shared/config/app.config.ts",{"_index":499,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/config/dev.config.ts",{"_index":503,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/config/prod.config.ts",{"_index":505,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/filter/http",{"_index":157,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/app/shared/interceptor/module1.interceptor.ts",{"_index":286,"title":{},"body":{"injectables/Module1Interceptor.html":{},"coverage.html":{}}}],["src/app/shared/interceptor/module1.interceptor.ts:6",{"_index":292,"title":{},"body":{"injectables/Module1Interceptor.html":{}}}],["src/app/shared/middelware/module1.middleware.ts",{"_index":301,"title":{},"body":{"injectables/Module1Middleware.html":{},"coverage.html":{}}}],["src/app/shared/middelware/module1.middleware.ts:4",{"_index":303,"title":{},"body":{"injectables/Module1Middleware.html":{}}}],["src/app/shared/middelware/module1.middleware.ts:7",{"_index":307,"title":{},"body":{"injectables/Module1Middleware.html":{}}}],["src/app/shared/model/module1.model.ts",{"_index":311,"title":{},"body":{"classes/Module1Model.html":{},"coverage.html":{}}}],["src/app/shared/model/module1.model.ts:5",{"_index":315,"title":{},"body":{"classes/Module1Model.html":{}}}],["src/app/shared/model/module1.model.ts:8",{"_index":313,"title":{},"body":{"classes/Module1Model.html":{}}}],["src/app/shared/model/module2.model.ts",{"_index":345,"title":{},"body":{"classes/Module2Model.html":{},"coverage.html":{}}}],["src/app/shared/model/module2.model.ts:5",{"_index":347,"title":{},"body":{"classes/Module2Model.html":{}}}],["src/app/shared/model/module2.model.ts:8",{"_index":346,"title":{},"body":{"classes/Module2Model.html":{}}}],["src/app/shared/model/user.model.ts",{"_index":416,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/shared/model/user.model.ts:10",{"_index":420,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/user.model.ts:13",{"_index":421,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/user.model.ts:4",{"_index":418,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/user.model.ts:7",{"_index":419,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/schema/module2.schema.ts",{"_index":194,"title":{},"body":{"interfaces/IModule2.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/schema/user.schema.ts",{"_index":206,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/services/module2/module2mongo.service.ts",{"_index":354,"title":{},"body":{"injectables/Module2MongoService.html":{},"coverage.html":{}}}],["src/app/shared/services/module2/module2mongo.service.ts:11",{"_index":361,"title":{},"body":{"injectables/Module2MongoService.html":{}}}],["src/app/shared/services/module2/module2mongo.service.ts:21",{"_index":362,"title":{},"body":{"injectables/Module2MongoService.html":{}}}],["src/app/shared/services/module2/module2mongo.service.ts:8",{"_index":358,"title":{},"body":{"injectables/Module2MongoService.html":{}}}],["src/app/shared/services/scheduler/scheduler.service.ts",{"_index":386,"title":{},"body":{"injectables/SchedulerService.html":{},"coverage.html":{}}}],["src/app/shared/services/scheduler/scheduler.service.ts:15",{"_index":390,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/shared/services/scheduler/scheduler.service.ts:7",{"_index":396,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["src/app/shared/services/services.module.ts",{"_index":406,"title":{},"body":{"modules/ServicesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/services/user/user.service.ts",{"_index":462,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/shared/services/user/user.service.ts:11",{"_index":468,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user/user.service.ts:21",{"_index":469,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user/user.service.ts:32",{"_index":473,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user/user.service.ts:8",{"_index":465,"title":{},"body":{"injectables/UserService.html":{}}}],["src/main.ts",{"_index":509,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":588,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":591,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":593,"title":{},"body":{"index.html":{}}}],["startcron",{"_index":388,"title":{},"body":{"injectables/SchedulerService.html":{}}}],["started",{"_index":546,"title":{"index.html":{}},"body":{}}],["starter",{"_index":550,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":490,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":176,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"controllers/Module1Controller.html":{},"controllers/Module2Controller.html":{}}}],["strategy",{"_index":222,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalUserStrategy.html":{}}}],["string",{"_index":132,"title":{},"body":{"injectables/AuthUserService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IModule2.html":{},"interfaces/IUser.html":{},"injectables/LocalUserStrategy.html":{},"controllers/Module1Controller.html":{},"classes/Module1Model.html":{},"injectables/Module1Service.html":{},"controllers/Module2Controller.html":{},"classes/Module2Model.html":{},"injectables/Module2MongoService.html":{},"injectables/Module2Service.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":151,"title":{},"body":{"injectables/AuthUserService.html":{},"injectables/JwtStrategy.html":{}}}],["summary",{"_index":278,"title":{},"body":{"controllers/Module1Controller.html":{},"controllers/Module2Controller.html":{},"controllers/UserController.html":{}}}],["super",{"_index":226,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalUserStrategy.html":{}}}],["support",{"_index":601,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":602,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":539,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["table",{"_index":511,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":510,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":596,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":599,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":598,"title":{},"body":{"index.html":{}}}],["tests",{"_index":595,"title":{},"body":{"index.html":{}}}],["this.authuserservice.login(user",{"_index":456,"title":{},"body":{"controllers/UserController.html":{}}}],["this.authuserservice.validateuser(email",{"_index":244,"title":{},"body":{"injectables/LocalUserStrategy.html":{}}}],["this.jwtservice.sign(payload",{"_index":154,"title":{},"body":{"injectables/AuthUserService.html":{}}}],["this.model2model(model2model",{"_index":370,"title":{},"body":{"injectables/Module2MongoService.html":{}}}],["this.model2model.findbyid(id",{"_index":375,"title":{},"body":{"injectables/Module2MongoService.html":{}}}],["this.module1service.find(id",{"_index":282,"title":{},"body":{"controllers/Module1Controller.html":{}}}],["this.module1service.update(payload",{"_index":285,"title":{},"body":{"controllers/Module1Controller.html":{}}}],["this.module2mongoservice.create(payload",{"_index":384,"title":{},"body":{"injectables/Module2Service.html":{}}}],["this.module2mongoservice.find(id",{"_index":383,"title":{},"body":{"injectables/Module2Service.html":{}}}],["this.module2service.find(id",{"_index":343,"title":{},"body":{"controllers/Module2Controller.html":{}}}],["this.module2service.update(payload",{"_index":344,"title":{},"body":{"controllers/Module2Controller.html":{}}}],["this.prepareexception(exception",{"_index":178,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["this.usermodel(user",{"_index":478,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findbyid(id",{"_index":482,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findone",{"_index":485,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create(user",{"_index":448,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.find(id",{"_index":451,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findbyemail(email",{"_index":143,"title":{},"body":{"injectables/AuthUserService.html":{},"controllers/UserController.html":{}}}],["this.userservice.findbyemail(user.email",{"_index":147,"title":{},"body":{"injectables/AuthUserService.html":{}}}],["throw",{"_index":245,"title":{},"body":{"injectables/LocalUserStrategy.html":{},"injectables/Module2MongoService.html":{},"injectables/UserService.html":{}}}],["timestamps",{"_index":200,"title":{},"body":{"interfaces/IModule2.html":{},"interfaces/IUser.html":{},"miscellaneous/variables.html":{}}}],["trim",{"_index":210,"title":{},"body":{"interfaces/IUser.html":{},"miscellaneous/variables.html":{}}}],["true",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthUserService.html":{},"interfaces/IModule2.html":{},"interfaces/IUser.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":368,"title":{},"body":{"injectables/Module2MongoService.html":{},"injectables/UserService.html":{}}}],["type",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthUserService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IModule2.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalUserStrategy.html":{},"controllers/Module1Controller.html":{},"injectables/Module1Interceptor.html":{},"injectables/Module1Middleware.html":{},"classes/Module1Model.html":{},"injectables/Module1Service.html":{},"controllers/Module2Controller.html":{},"classes/Module2Model.html":{},"injectables/Module2MongoService.html":{},"injectables/Module2Service.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":190,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["typescript",{"_index":549,"title":{},"body":{"index.html":{}}}],["ui",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":241,"title":{},"body":{"injectables/LocalUserStrategy.html":{}}}],["undefined",{"_index":148,"title":{},"body":{"injectables/AuthUserService.html":{},"controllers/Module1Controller.html":{},"controllers/Module2Controller.html":{},"injectables/UserService.html":{}}}],["unique",{"_index":208,"title":{},"body":{"interfaces/IUser.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":594,"title":{},"body":{"index.html":{}}}],["update",{"_index":260,"title":{},"body":{"controllers/Module1Controller.html":{},"injectables/Module1Service.html":{},"injectables/Module2Service.html":{}}}],["update(payload",{"_index":325,"title":{},"body":{"injectables/Module1Service.html":{},"injectables/Module2Service.html":{}}}],["url",{"_index":628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":302,"title":{},"body":{"injectables/Module1Middleware.html":{}}}],["use(req",{"_index":304,"title":{},"body":{"injectables/Module1Middleware.html":{}}}],["usecreateindex",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["usefindandmodify",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":438,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtauthguard",{"_index":449,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(localauthguard",{"_index":453,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors",{"_index":265,"title":{},"body":{"controllers/Module1Controller.html":{}}}],["useinterceptors(module1interceptor",{"_index":277,"title":{},"body":{"controllers/Module1Controller.html":{}}}],["usenewurlparser",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":129,"title":{"classes/User.html":{}},"body":{"injectables/AuthUserService.html":{},"injectables/LocalUserStrategy.html":{},"modules/ServicesModule.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["user'})@post",{"_index":428,"title":{},"body":{"controllers/UserController.html":{}}}],["user._id",{"_index":152,"title":{},"body":{"injectables/AuthUserService.html":{}}}],["user.controller",{"_index":460,"title":{},"body":{"modules/UserModule.html":{}}}],["user.email",{"_index":150,"title":{},"body":{"injectables/AuthUserService.html":{}}}],["user.password",{"_index":144,"title":{},"body":{"injectables/AuthUserService.html":{}}}],["user.service",{"_index":95,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalUserStrategy.html":{},"controllers/UserController.html":{}}}],["user.service.ts",{"_index":119,"title":{},"body":{"injectables/AuthUserService.html":{},"coverage.html":{}}}],["user.service.ts:10",{"_index":134,"title":{},"body":{"injectables/AuthUserService.html":{}}}],["user.service.ts:19",{"_index":130,"title":{},"body":{"injectables/AuthUserService.html":{}}}],["user.service.ts:7",{"_index":127,"title":{},"body":{"injectables/AuthUserService.html":{}}}],["user.strategy",{"_index":100,"title":{},"body":{"modules/AuthModule.html":{}}}],["user.strategy.ts",{"_index":236,"title":{},"body":{"injectables/LocalUserStrategy.html":{},"coverage.html":{}}}],["user.strategy.ts:15",{"_index":240,"title":{},"body":{"injectables/LocalUserStrategy.html":{}}}],["user.strategy.ts:7",{"_index":238,"title":{},"body":{"injectables/LocalUserStrategy.html":{}}}],["user/user.service",{"_index":409,"title":{},"body":{"modules/ServicesModule.html":{}}}],["usercontroller",{"_index":422,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodel",{"_index":466,"title":{},"body":{"injectables/UserService.html":{}}}],["usermodule",{"_index":48,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["usernamefield",{"_index":242,"title":{},"body":{"injectables/LocalUserStrategy.html":{}}}],["userobj",{"_index":477,"title":{},"body":{"injectables/UserService.html":{}}}],["userobj._id",{"_index":480,"title":{},"body":{"injectables/UserService.html":{}}}],["userobj.password",{"_index":483,"title":{},"body":{"injectables/UserService.html":{}}}],["userobj.save",{"_index":479,"title":{},"body":{"injectables/UserService.html":{}}}],["userschema",{"_index":207,"title":{},"body":{"interfaces/IUser.html":{},"modules/ServicesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":125,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthUserService.html":{},"modules/ServicesModule.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["useunifiedtopology",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["validate",{"_index":217,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalUserStrategy.html":{}}}],["validate(email",{"_index":239,"title":{},"body":{"injectables/LocalUserStrategy.html":{}}}],["validate(payload",{"_index":219,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuser",{"_index":122,"title":{},"body":{"injectables/AuthUserService.html":{}}}],["validateuser(email",{"_index":131,"title":{},"body":{"injectables/AuthUserService.html":{}}}],["value",{"_index":475,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":497,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["variables",{"_index":609,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["versionkey",{"_index":201,"title":{},"body":{"interfaces/IModule2.html":{},"interfaces/IUser.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/Module1Middleware.html":{},"injectables/SchedulerService.html":{}}}],["watch",{"_index":589,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/Module1Module.html":{},"modules/Module2Module.html":{},"modules/ServicesModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFavicon\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFavicon\n                        \n                        \n                    \n                \n            \n            \n                \ngetFavicon(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/favicon.ico')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Res, HttpStatus } from '@nestjs/common'\nimport { Response } from 'express'\n\n@Controller()\nexport class AppController {\n  @Get('/favicon.ico')\n  getFavicon(@Res() res: Response) {\n    res.status(HttpStatus.NO_CONTENT).send()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nModule1Module\n\nModule1Module\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nModule1Module->AppModule\n\n\n\n\n\nModule2Module\n\nModule2Module\n\nAppModule -->\n\nModule2Module->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            Module1Module\n                        \n                        \n                            Module2Module\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, NestModule, MiddlewareConsumer } from '@nestjs/common'\nimport { AppController } from './app.controller'\nimport { Module1Module } from 'app/module/module1/module1.module'\nimport { Module2Module } from 'app/module/module2/module2.module'\nimport { Module1Middleware } from '@shared/middelware/module1.middleware'\nimport { Module1Controller } from 'app/module/module1/module1.controller'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { appConfig } from '@shared/config/app.config'\nimport { UserModule } from 'app/module/user/user.module'\nimport { ScheduleModule } from '@nestjs/schedule'\n\n@Module({\n  imports: [\n    Module1Module,\n    Module2Module,\n    UserModule,\n    MongooseModule.forRoot(`mongodb://${appConfig().db.mongo.url}/${appConfig().db.mongo.database}`, {\n      useCreateIndex: true,\n      useFindAndModify: false,\n      useUnifiedTopology: true,\n      useNewUrlParser: true,\n    }),\n    ScheduleModule.forRoot(),\n  ],\n  controllers: [AppController],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(Module1Middleware).forRoutes(Module1Controller)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nServicesModule\n\nServicesModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nServicesModule->AuthModule\n\n\n\n\n\nAuthUserService \n\nAuthUserService \n\nAuthUserService  -->\n\nAuthModule->AuthUserService \n\n\n\n\n\nAuthUserService\n\nAuthUserService\n\nAuthModule -->\n\nAuthUserService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalUserStrategy\n\nLocalUserStrategy\n\nAuthModule -->\n\nLocalUserStrategy->AuthModule\n\n\n\nAuthModule -->\n\nLocalUserStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthUserService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalUserStrategy\n                        \n                        \n                            LocalUserStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ServicesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthUserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { AuthUserService } from './auth-user.service'\nimport { ServicesModule } from '@shared/services/services.module'\nimport { PassportModule } from '@nestjs/passport'\nimport { LocalUserStrategy } from './local-user.strategy'\nimport { JwtModule } from '@nestjs/jwt'\nimport { jwtConstants } from './auth.constant'\nimport { JwtStrategy } from './jwt.strategy'\n\n@Module({\n  imports: [\n    ServicesModule,\n    PassportModule.register({\n      defaultStrategy: 'jwt',\n      session: false,\n    }),\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '7d' },\n    }),\n  ],\n  providers: [AuthUserService, LocalUserStrategy, LocalUserStrategy, JwtStrategy],\n  exports: [AuthUserService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthUserService.html":{"url":"injectables/AuthUserService.html","title":"injectable - AuthUserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/auth/auth-user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/auth/auth-user.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/auth/auth-user.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/auth/auth-user.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { UserService } from '@shared/services/index.services'\nimport { User } from '@shared/model/user.model'\nimport { JwtService } from '@nestjs/jwt'\n\n@Injectable()\nexport class AuthUserService {\n  constructor(private userService: UserService, private jwtService: JwtService) {}\n\n  async validateUser(email: string, password: string): Promise {\n    const user: User = await this.userService.findByEmail(email, true)\n    if (user && user.password === password) {\n      const { password, ...result } = user\n      return result\n    }\n    return null\n  }\n\n  async login(user: User) {\n    user = await this.userService.findByEmail(user.email)\n    user.password = undefined\n    const payload = { email: user.email, sub: user._id }\n    return {\n      user,\n      access_token: this.jwtService.sign(payload),\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/filter/http-exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                            \n                                prepareException\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/filter/http-exception.filter.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            prepareException\n                        \n                        \n                    \n                \n            \n            \n                \nprepareException(exc: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/filter/http-exception.filter.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exc\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost } from '@nestjs/common'\nimport { HttpException, InternalServerErrorException } from '@nestjs/common'\nimport { appConfig } from '@shared/config/app.config'\n\n@Catch()\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp()\n    const response = ctx.getResponse()\n    const { status, json } = this.prepareException(exception)\n\n    if (appConfig().isLog) {\n      console.error(JSON.stringify(json))\n    }\n\n    response.status(status).send(json)\n  }\n\n  prepareException(exc: any): { status: number; json: object } {\n    const error = exc instanceof HttpException ? exc : new InternalServerErrorException(exc.message)\n    const status = error.getStatus()\n    const response = error.getResponse()\n    const json = typeof response === 'string' ? { error: response } : response\n    return { status, json }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IModule2.html":{"url":"interfaces/IModule2.html","title":"interface - IModule2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IModule2\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/schema/module2.schema.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        description\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as mongoose from 'mongoose'\n\nexport const Module2Schema = new mongoose.Schema(\n  {\n    description: String,\n  },\n  {\n    timestamps: true,\n    versionKey: false,\n  },\n)\n\nexport interface IModule2 extends mongoose.Document {\n  readonly description?: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/schema/user.schema.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as mongoose from 'mongoose'\n\nexport const UserSchema = new mongoose.Schema(\n  {\n    email: {\n      type: String,\n      unique: true,\n      lowercase: true,\n      trim: true,\n    },\n    name: String,\n    password: String,\n  },\n  {\n    timestamps: true,\n    versionKey: false,\n  },\n)\n\nexport interface IUser extends mongoose.Document {\n  email: string\n  name?: string\n  password?: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/auth/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { AuthGuard } from '@nestjs/passport'\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/auth/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/auth/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { Injectable } from '@nestjs/common'\nimport { jwtConstants } from './auth.constant'\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwtConstants.secret,\n    })\n  }\n\n  async validate(payload: any) {\n    return { sub: payload._id, email: payload.email }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/auth/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { AuthGuard } from '@nestjs/passport'\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalUserStrategy.html":{"url":"injectables/LocalUserStrategy.html","title":"injectable - LocalUserStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalUserStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/auth/local-user.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authUserService: AuthUserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/auth/local-user.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authUserService\n                                                  \n                                                        \n                                                                        AuthUserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/auth/local-user.strategy.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { Injectable, UnauthorizedException } from '@nestjs/common'\nimport { AuthUserService } from './auth-user.service'\n\n@Injectable()\nexport class LocalUserStrategy extends PassportStrategy(Strategy) {\n  constructor(private authUserService: AuthUserService) {\n    super({\n      usernameField: 'email',\n      passwordField: 'password',\n    })\n  }\n\n  async validate(email: string, password: string): Promise {\n    const user = await this.authUserService.validateUser(email, password)\n    if (!user) {\n      throw new UnauthorizedException()\n    }\n    return user\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/Module1Controller.html":{"url":"controllers/Module1Controller.html","title":"controller - Module1Controller","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  Module1Controller\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/module/module1/module1.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                module1\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                post\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get method description'})@ApiResponse({status: undefined, description: 'The search result.'})@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/app/module/module1/module1.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            post\n                        \n                        \n                    \n                \n            \n            \n                \npost(payload: Module1Model)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Post method description'})@ApiResponse({status: undefined, description: 'The update result.'})@Post()\n                \n            \n\n            \n                \n                    Defined in src/app/module/module1/module1.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                Module1Model\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Post, Body, HttpStatus, UseInterceptors } from '@nestjs/common'\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger'\nimport { Module1Service } from './module1.service'\nimport { Module1Model } from '@shared/model/module1.model'\nimport { Module1Interceptor } from '@shared/interceptor/module1.interceptor'\n\n@Controller('module1')\n@ApiTags('module1')\n@UseInterceptors(Module1Interceptor)\nexport class Module1Controller {\n  constructor(private module1Service: Module1Service) {}\n\n  @ApiOperation({ summary: 'Get method description' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'The search result.',\n  })\n  @Get(':id')\n  get(@Param('id') id: string) {\n    return this.module1Service.find(id)\n  }\n\n  @ApiOperation({ summary: 'Post method description' })\n  @ApiResponse({\n    status: HttpStatus.CREATED,\n    description: 'The update result.',\n  })\n  @Post()\n  post(@Body() payload: Module1Model) {\n    return this.module1Service.update(payload)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Module1Interceptor.html":{"url":"injectables/Module1Interceptor.html","title":"injectable - Module1Interceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Module1Interceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interceptor/module1.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/interceptor/module1.interceptor.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, Injectable, NestInterceptor } from '@nestjs/common'\nimport { Observable } from 'rxjs'\n\n@Injectable()\nexport class Module1Interceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    console.log('Module1Interceptor interceptor... OK')\n    return next.handle()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Module1Middleware.html":{"url":"injectables/Module1Middleware.html","title":"injectable - Module1Middleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Module1Middleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/middelware/module1.middleware.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/middelware/module1.middleware.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            use\n                        \n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/middelware/module1.middleware.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common'\n\n@Injectable()\nexport class Module1Middleware implements NestMiddleware {\n  constructor() {}\n\n  use(req: Request, res: Response, next: Function) {\n    console.log('Module1Middelvare interceptor... OK')\n    next()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Module1Model.html":{"url":"classes/Module1Model.html","title":"class - Module1Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Module1Model\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model/module1.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/module1.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/module1.model.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\n\nexport class Module1Model {\n  @ApiProperty()\n  id: string\n\n  @ApiProperty({ required: false })\n  description: string\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/Module1Module.html":{"url":"modules/Module1Module.html","title":"module - Module1Module","body":"\n                   \n\n\n\n\n    Modules\n    Module1Module\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_Module1Module\n\n\n\ncluster_Module1Module_providers\n\n\n\n\nModule1Service\n\nModule1Service\n\n\n\nModule1Module\n\nModule1Module\n\nModule1Module -->\n\nModule1Service->Module1Module\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/module/module1/module1.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Module1Service\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            Module1Controller\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { Module1Controller } from './module1.controller'\nimport { Module1Service } from './module1.service'\n\n@Module({\n  controllers: [Module1Controller],\n  providers: [Module1Service],\n})\nexport class Module1Module {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Module1Service.html":{"url":"injectables/Module1Service.html","title":"injectable - Module1Service","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Module1Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/module/module1/module1.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                find\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            find\n                        \n                        \n                    \n                \n            \n            \n                \nfind(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/module/module1/module1.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { id: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(payload: Module1Model)\n                \n            \n\n\n            \n                \n                    Defined in src/app/module/module1/module1.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                Module1Model\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { payload: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { Module1Model } from '@shared/model/module1.model'\n\n@Injectable()\nexport class Module1Service {\n  find(id: string) {\n    return { id }\n  }\n\n  update(payload: Module1Model) {\n    return { payload }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/Module2Controller.html":{"url":"controllers/Module2Controller.html","title":"controller - Module2Controller","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  Module2Controller\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/module/module2/module2.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                module2\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                post\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Find in mongo by id'})@ApiResponse({status: undefined, description: 'The search result.'})@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/app/module/module2/module2.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            post\n                        \n                        \n                    \n                \n            \n            \n                \npost(payload: Module2Model)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Save to mongo'})@ApiResponse({status: undefined, description: 'The operation result.'})@Post()\n                \n            \n\n            \n                \n                    Defined in src/app/module/module2/module2.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                Module2Model\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, HttpStatus, Get, Param, Post, Body } from '@nestjs/common'\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger'\nimport { Module2Service } from './module2.service'\nimport { Module2Model } from '@shared/model/module2.model'\n\n@Controller('module2')\n@ApiTags('module2')\nexport class Module2Controller {\n  constructor(private module2Service: Module2Service) {}\n\n  @ApiOperation({ summary: 'Find in mongo by id' })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'The search result.',\n  })\n  @Get(':id')\n  get(@Param('id') id: string): Promise {\n    return this.module2Service.find(id)\n  }\n\n  @ApiOperation({ summary: 'Save to mongo' })\n  @ApiResponse({\n    status: HttpStatus.CREATED,\n    description: 'The operation result.',\n  })\n  @Post()\n  post(@Body() payload: Module2Model): Promise {\n    return this.module2Service.update(payload)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Module2Model.html":{"url":"classes/Module2Model.html","title":"class - Module2Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Module2Model\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model/module2.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/module2.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/module2.model.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\n\nexport class Module2Model {\n  @ApiProperty()\n  id: string\n\n  @ApiProperty({ required: false })\n  description: string\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/Module2Module.html":{"url":"modules/Module2Module.html","title":"module - Module2Module","body":"\n                   \n\n\n\n\n    Modules\n    Module2Module\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_Module2Module\n\n\n\ncluster_Module2Module_imports\n\n\n\ncluster_Module2Module_providers\n\n\n\n\nServicesModule\n\nServicesModule\n\n\n\nModule2Module\n\nModule2Module\n\nModule2Module -->\n\nServicesModule->Module2Module\n\n\n\n\n\nModule2Service\n\nModule2Service\n\nModule2Module -->\n\nModule2Service->Module2Module\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/module/module2/module2.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Module2Service\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            Module2Controller\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ServicesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { Module2Service } from './module2.service'\nimport { Module2Controller } from './module2.controller'\nimport { ServicesModule } from '@shared/services/services.module'\n\n@Module({\n  imports: [ServicesModule],\n  providers: [Module2Service],\n  controllers: [Module2Controller],\n})\nexport class Module2Module {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Module2MongoService.html":{"url":"injectables/Module2MongoService.html","title":"injectable - Module2MongoService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Module2MongoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/module2/module2Mongo.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                find\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(model2Model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/module2/module2Mongo.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model2Model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(model2Model: Module2Model)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/module2/module2Mongo.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model2Model\n                                    \n                                                Module2Model\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/module2/module2Mongo.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ConflictException, NotFoundException } from '@nestjs/common'\nimport { Model } from 'mongoose'\nimport { IModule2 } from '@shared/schema/module2.schema'\nimport { Module2Model } from '@shared/model/module2.model'\nimport { InjectModel } from '@nestjs/mongoose'\n\n@Injectable()\nexport class Module2MongoService {\n  constructor(@InjectModel('Module2Collection') private readonly model2Model: Model) {}\n\n  async create(model2Model: Module2Model): Promise {\n    try {\n      const model2Obj = new this.model2Model(model2Model)\n      await model2Obj.save()\n      return { id: model2Obj._id }\n    } catch (error) {\n      throw new ConflictException(`Duplicate: ${error.message}`)\n    }\n  }\n\n  async find(id: string): Promise {\n    try {\n      let model2Obj = await this.model2Model.findById(id)\n      if (!model2Obj) throw new NotFoundException()\n      return model2Obj\n    } catch (error) {\n      throw new NotFoundException(`Not found: ${error.message}`)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Module2Service.html":{"url":"injectables/Module2Service.html","title":"injectable - Module2Service","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Module2Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/module/module2/module2.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                find\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(module2MongoService: Module2MongoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/module/module2/module2.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        module2MongoService\n                                                  \n                                                        \n                                                                        Module2MongoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            find\n                        \n                        \n                    \n                \n            \n            \n                \nfind(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/module/module2/module2.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(payload: Module2Model)\n                \n            \n\n\n            \n                \n                    Defined in src/app/module/module2/module2.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                Module2Model\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { Module2Model } from '@shared/model/module2.model'\nimport { Module2MongoService } from '@shared/services/index.services'\n\n@Injectable()\nexport class Module2Service {\n  constructor(private module2MongoService: Module2MongoService) {}\n\n  find(id: string): Promise {\n    return this.module2MongoService.find(id)\n  }\n\n  update(payload: Module2Model): Promise {\n    return this.module2MongoService.create(payload)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchedulerService.html":{"url":"injectables/SchedulerService.html","title":"injectable - SchedulerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SchedulerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/scheduler/scheduler.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleCron\n                            \n                            \n                                startCron\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleCron\n                        \n                        \n                    \n                \n            \n            \n                \nhandleCron()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_HOUR)\n                \n            \n\n            \n                \n                    Defined in src/app/shared/services/scheduler/scheduler.service.ts:15\n                \n            \n\n\n            \n                \n                    Cron event every hour\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            startCron\n                        \n                        \n                    \n                \n            \n            \n                \nstartCron()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(new Date())\n                \n            \n\n            \n                \n                    Defined in src/app/shared/services/scheduler/scheduler.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { Cron, CronExpression } from '@nestjs/schedule'\n\n@Injectable()\nexport class SchedulerService {\n  @Cron(new Date(Date.now() + 5 * 1000))\n  startCron() {\n    console.log('Start cron....')\n  }\n\n  /**\n   * Cron event every hour\n   */\n  @Cron(CronExpression.EVERY_HOUR)\n  handleCron() {\n    console.log('Cron every hour....')\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServicesModule.html":{"url":"modules/ServicesModule.html","title":"module - ServicesModule","body":"\n                   \n\n\n\n\n    Modules\n    ServicesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_exports\n\n\n\ncluster_ServicesModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nServicesModule\n\nServicesModule\n\nUserService  -->\n\nServicesModule->UserService \n\n\n\n\n\nModule2MongoService\n\nModule2MongoService\n\nServicesModule -->\n\nModule2MongoService->ServicesModule\n\n\n\n\n\nSchedulerService\n\nSchedulerService\n\nServicesModule -->\n\nSchedulerService->ServicesModule\n\n\n\n\n\nUserService\n\nUserService\n\nServicesModule -->\n\nUserService->ServicesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/services/services.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Module2MongoService\n                        \n                        \n                            SchedulerService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, HttpModule } from '@nestjs/common'\nimport { Module2MongoService } from './index.services'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { Module2Schema } from '@shared/schema/module2.schema'\nimport { UserService } from './user/user.service'\nimport { UserSchema } from '@shared/schema/user.schema'\nimport { SchedulerService } from './scheduler/scheduler.service'\n\nconst sharedServices: any[] = [Module2MongoService, UserService]\n\n@Module({\n  imports: [\n    HttpModule,\n    MongooseModule.forFeature([\n      { name: 'Module2Collection', schema: Module2Schema },\n      { name: 'User', schema: UserSchema },\n    ]),\n  ],\n  providers: [...sharedServices, SchedulerService],\n  exports: [...sharedServices],\n})\nexport class ServicesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model/user.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/user.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/user.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/user.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/model/user.model.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger'\n\nexport class User {\n  _id?: string\n\n  @ApiProperty()\n  email: string\n\n  @ApiProperty({ required: false })\n  name?: string\n\n  @ApiProperty({ required: false })\n  password?: string\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/module/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                findUser\n                            \n                            \n                                    Async\n                                findUserByEmail\n                            \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create user'})@Post()\n                \n            \n\n            \n                \n                    Defined in src/app/module/user/user.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findUser(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Find user by id'})@ApiBearerAuth()@UseGuards(JwtAuthGuard)@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/app/module/user/user.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findUserByEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findUserByEmail(email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Find user by email'})@ApiBearerAuth()@UseGuards(JwtAuthGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/app/module/user/user.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'login'})@UseGuards(LocalAuthGuard)@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/app/module/user/user.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, UseGuards, Get, Param, Query } from '@nestjs/common'\nimport { ApiTags, ApiOperation, ApiBearerAuth } from '@nestjs/swagger'\nimport { UserService } from '@shared/services/index.services'\nimport { AuthUserService } from '@shared/auth/auth-user.service'\nimport { User } from '@shared/model/user.model'\nimport { JwtAuthGuard } from '@shared/auth/jwt-auth.guard'\nimport { LocalAuthGuard } from '@shared/auth/local-auth.guard'\n\n@ApiTags('user')\n@Controller('user')\nexport class UserController {\n  constructor(private userService: UserService, private authUserService: AuthUserService) {}\n\n  @ApiOperation({ summary: 'Create user' })\n  @Post()\n  async createUser(@Body() user: User) {\n    return await this.userService.create(user)\n  }\n\n  @ApiOperation({ summary: 'Find user by id' })\n  @ApiBearerAuth()\n  @UseGuards(JwtAuthGuard)\n  @Get(':id')\n  async findUser(@Param('id') id: string) {\n    return await this.userService.find(id)\n  }\n\n  @ApiOperation({ summary: 'Find user by email' })\n  @ApiBearerAuth()\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  async findUserByEmail(@Query('email') email: string) {\n    return await this.userService.findByEmail(email)\n  }\n\n  @ApiOperation({ summary: 'login' })\n  @UseGuards(LocalAuthGuard)\n  @Post('login')\n  async login(@Body() user: User) {\n    return this.authUserService.login(user)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nUserModule -->\n\nServicesModule->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/module/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ServicesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { UserController } from './user.controller'\nimport { AuthModule } from '@shared/auth/auth.module'\nimport { ServicesModule } from '@shared/services/services.module'\n\n@Module({\n  imports: [ServicesModule, AuthModule],\n  controllers: [UserController],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/user/user.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/user.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/user.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findByEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByEmail(email: string, showPassword: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user/user.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    showPassword\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ConflictException, NotFoundException } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { IUser } from '@shared/schema/user.schema'\nimport { Model } from 'mongoose'\nimport { User } from '@shared/model/user.model'\n\n@Injectable()\nexport class UserService {\n  constructor(@InjectModel('User') private readonly userModel: Model) {}\n\n  async create(user: User): Promise {\n    try {\n      const userObj = new this.userModel(user)\n      await userObj.save()\n      return { id: userObj._id }\n    } catch (error) {\n      throw new ConflictException('Duplicate: ' + error.message)\n    }\n  }\n\n  async find(id: string): Promise {\n    try {\n      let userObj = await this.userModel.findById(id)\n      if (!userObj) throw new NotFoundException()\n      userObj.password = undefined\n      return userObj\n    } catch (error) {\n      throw new NotFoundException('Not found: ' + error.message)\n    }\n  }\n\n  async findByEmail(email: string, showPassword: boolean = false): Promise {\n    let userObj: User = new User()\n    await this.userModel.findOne({ email: email }, (err, result) => {\n      userObj = result\n      if (!showPassword) {\n        userObj.password = undefined\n      }\n    })\n    return userObj\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/module/module1/module1.controller.ts\n            \n            controller\n            Module1Controller\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/module/module1/module1.service.ts\n            \n            injectable\n            Module1Service\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/module/module2/module2.controller.ts\n            \n            controller\n            Module2Controller\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/module/module2/module2.service.ts\n            \n            injectable\n            Module2Service\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/module/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/auth/auth-user.service.ts\n            \n            injectable\n            AuthUserService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/auth/auth.constant.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/auth/local-user.strategy.ts\n            \n            injectable\n            LocalUserStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/config/app.config.ts\n            \n            variable\n            _env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/config/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/config/app.config.ts\n            \n            variable\n            CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/config/app.config.ts\n            \n            variable\n            ENVIRONMENT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/config/dev.config.ts\n            \n            variable\n            DEV_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/config/prod.config.ts\n            \n            variable\n            PROD_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/filter/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/interceptor/module1.interceptor.ts\n            \n            injectable\n            Module1Interceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/middelware/module1.middleware.ts\n            \n            injectable\n            Module1Middleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/model/module1.model.ts\n            \n            class\n            Module1Model\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/model/module2.model.ts\n            \n            class\n            Module2Model\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/model/user.model.ts\n            \n            class\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/schema/module2.schema.ts\n            \n            interface\n            IModule2\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/schema/module2.schema.ts\n            \n            variable\n            Module2Schema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/schema/user.schema.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/schema/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/services/module2/module2Mongo.service.ts\n            \n            injectable\n            Module2MongoService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/services/scheduler/scheduler.service.ts\n            \n            injectable\n            SchedulerService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/shared/services/services.module.ts\n            \n            variable\n            sharedServices\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/services/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/jwt : ^7.0.0\n        \n            @nestjs/mongoose : ^7.0.0\n        \n            @nestjs/passport : ^7.0.0\n        \n            @nestjs/platform-express : ^7.0.9\n        \n            @nestjs/schedule : ^0.3.1\n        \n            @nestjs/swagger : ^4.5.5\n        \n            body-parser : ^1.19.0\n        \n            compression : ^1.7.4\n        \n            express : ^4.17.1\n        \n            express-rate-limit : ^5.1.3\n        \n            helmet : ^3.22.0\n        \n            mongoose : ^5.9.12\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            swagger-ui-express : ^4.1.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\nDescription\nNestJS framework TypeScript starter repository with the most important components.\nFeatures\n\nModularized project\nAPI Rest ready on http://127.0.0.1:3000/api/v0/\nDevelopment, Production environment ready\nPassport, JWT Security implemented\nUser Login with Mongo database\nNestJS Middelware implemented\nNestJS Interceptor implemented\nNestJS Filter implemented\nMongodb connection ready\nExpress server configured with elemental security implemented\nScheduler implemented\nCompodoc documentation implemented\nSwagger API Document on http://127.0.0.1:3000/doc\n\nRequirements\n\nMongodb instance on localhost, default port\nFor production set environment variable: \"prod\"\n\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run build\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        Module1Module\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        Module2Module\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServicesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_Module1Module\n\n\n\ncluster_Module1Module_providers\n\n\n\ncluster_Module2Module\n\n\n\ncluster_Module2Module_providers\n\n\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_exports\n\n\n\ncluster_ServicesModule_providers\n\n\n\n\nModule1Module\n\nModule1Module\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nModule1Module->AppModule\n\n\n\n\n\nModule2Module\n\nModule2Module\n\nAppModule -->\n\nModule2Module->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nModule2Module -->\n\nServicesModule->Module2Module\n\n\n\nUserModule -->\n\nServicesModule->UserModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nServicesModule->AuthModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nServicesModule->UserService \n\n\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\nAuthUserService \n\nAuthUserService \n\nAuthUserService  -->\n\nAuthModule->AuthUserService \n\n\n\n\n\nAuthUserService\n\nAuthUserService\n\nAuthModule -->\n\nAuthUserService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalUserStrategy\n\nLocalUserStrategy\n\nAuthModule -->\n\nLocalUserStrategy->AuthModule\n\n\n\nAuthModule -->\n\nLocalUserStrategy->AuthModule\n\n\n\n\n\nModule1Service\n\nModule1Service\n\nModule1Module -->\n\nModule1Service->Module1Module\n\n\n\n\n\nModule2Service\n\nModule2Service\n\nModule2Module -->\n\nModule2Service->Module2Module\n\n\n\n\n\nModule2MongoService\n\nModule2MongoService\n\nServicesModule -->\n\nModule2MongoService->ServicesModule\n\n\n\n\n\nSchedulerService\n\nSchedulerService\n\nServicesModule -->\n\nSchedulerService->ServicesModule\n\n\n\n\n\nUserService\n\nUserService\n\nServicesModule -->\n\nUserService->ServicesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _env   (src/.../app.config.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            CONFIG   (src/.../app.config.ts)\n                        \n                        \n                            DEV_CONFIG   (src/.../dev.config.ts)\n                        \n                        \n                            ENVIRONMENT   (src/.../app.config.ts)\n                        \n                        \n                            jwtConstants   (src/.../auth.constant.ts)\n                        \n                        \n                            Module2Schema   (src/.../module2.schema.ts)\n                        \n                        \n                            PROD_CONFIG   (src/.../prod.config.ts)\n                        \n                        \n                            sharedServices   (src/.../services.module.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/config/app.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            _env\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : process.env.ENVIRONMENT || 'dev'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {\n  return {\n    ...CONFIG,\n    ...ENVIRONMENT,\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ENVIRONMENT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  isDevEnvironment: () => _env.toLowerCase() === 'dev',\n  isProdEnvEnvironment: () => _env.toLowerCase() === 'prod',\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/shared/config/dev.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEV_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  port: 3000,\n  host: '127.0.0.1',\n  isLog: true,\n  isCors: false,\n  corsWhiteList: [],\n  db: {\n    mongo: {\n      url: 'localhost',\n      database: 'nestjs-starter-project',\n    },\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/shared/auth/auth.constant.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  secret: 'your-secret-key',\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/shared/schema/module2.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Module2Schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema(\n  {\n    description: String,\n  },\n  {\n    timestamps: true,\n    versionKey: false,\n  },\n)\n                        \n                    \n\n\n            \n        \n\n    src/app/shared/config/prod.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PROD_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  port: 4000,\n  host: '127.0.0.1',\n  isLog: false,\n  isCors: true,\n  corsWhiteList: ['https://frontend-1.web', 'https://frontend-2.web'],\n  db: {\n    mongo: {\n      url: 'localhost',\n      database: 'nestjs-starter-project',\n    },\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/shared/services/services.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            sharedServices\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [Module2MongoService, UserService]\n                        \n                    \n\n\n            \n        \n\n    src/app/shared/schema/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema(\n  {\n    email: {\n      type: String,\n      unique: true,\n      lowercase: true,\n      trim: true,\n    },\n    name: String,\n    password: String,\n  },\n  {\n    timestamps: true,\n    versionKey: false,\n  },\n)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
